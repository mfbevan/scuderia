/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Scuderia,
  ScuderiaInterface,
} from "../../../contracts/implementations/Scuderia";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "CannotTransferStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPaymentAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "SupplyWillBeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyStaked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenInLockin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockinPeriod",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "getStakeStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "timeStaked",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockinPeriod",
            type: "uint64",
          },
        ],
        internalType: "struct IStakable.StakedToken[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadataSeed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Scoot",
        name: "_address",
        type: "address",
      },
    ],
    name: "setScootContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "enum IStakable.LockinPeriod",
        name: "_lockin",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint64",
        name: "timeStaked",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockinPeriod",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_walletOwner",
        type: "address",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a80546001600160401b03191667016345785d8a0000179055600e805460ff191690553480156200003557600080fd5b50604051620034c1380380620034c1833981016040819052620000589162000287565b60405180604001604052806008815260200167536375646572696160c01b8152506040518060400160405280600381526020016214d0d160ea1b8152508181620000b1620000ab6200015660201b60201c565b6200015a565b6003620000bf83826200035e565b506004620000ce82826200035e565b5050600180555050506001600160a01b038116620001335760405162461bcd60e51b815260206004820152601b60248201527f6f776e657220616464726573732063616e6e6f7420626520307830000000000060448201526064015b60405180910390fd5b6001600160a01b03811633146200014f576200014f81620001aa565b506200042a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001b462000229565b6001600160a01b0381166200021b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200012a565b62000226816200015a565b50565b6000546001600160a01b03163314620002855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200012a565b565b6000602082840312156200029a57600080fd5b81516001600160a01b0381168114620002b257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002e457607f821691505b6020821081036200030557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035957600081815260208120601f850160051c81016020861015620003345750805b601f850160051c820191505b81811015620003555782815560010162000340565b5050505b505050565b81516001600160401b038111156200037a576200037a620002b9565b62000392816200038b8454620002cf565b846200030b565b602080601f831160018114620003ca5760008415620003b15750858301515b600019600386901b1c1916600185901b17855562000355565b600085815260208120601f198616915b82811015620003fb57888601518255948401946001909101908401620003da565b50858210156200041a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b613087806200043a6000396000f3fe6080604052600436106101c15760003560e01c8063715018a6116100f7578063c87b56dd11610095578063e449f34111610064578063e449f34114610556578063e985e9c514610576578063ea6206fd146105bf578063f2fde38b146105df57600080fd5b8063c87b56dd14610486578063d1ca41a9146104a6578063d5a44f86146104c6578063dab4fe4e1461052957600080fd5b806395d89b41116100d157806395d89b411461041e578063a0712d6814610433578063a22cb46514610446578063b88d4fde1461046657600080fd5b8063715018a6146103d65780637d8966e4146103eb5780638da5cb5b1461040057600080fd5b806323b872dd1161016457806351cff8d91161013e57806351cff8d91461035c5780636352211e1461037c57806368428a1b1461039c57806370a08231146103b657600080fd5b806323b872dd146102fc57806342842e0e1461031c57806342966c681461033c57600080fd5b8063081812fc116101a0578063081812fc14610258578063095ea7b31461029057806318160ddd146102b25780631982640c146102cf57600080fd5b8062ad1e3b146101c657806301ffc9a71461020657806306fdde0314610236575b600080fd5b3480156101d257600080fd5b506101f36101e13660046121fb565b600d6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561021257600080fd5b5061022661022136600461222a565b6105ff565b60405190151581526020016101fd565b34801561024257600080fd5b5061024b610651565b6040516101fd9190612297565b34801561026457600080fd5b506102786102733660046121fb565b6106e3565b6040516001600160a01b0390911681526020016101fd565b34801561029c57600080fd5b506102b06102ab3660046122bf565b610727565b005b3480156102be57600080fd5b5060025460015403600019016101f3565b3480156102db57600080fd5b506102ef6102ea3660046122eb565b6107f1565b6040516101fd9190612343565b34801561030857600080fd5b506102b0610317366004612356565b6108e8565b34801561032857600080fd5b506102b0610337366004612356565b610965565b34801561034857600080fd5b506102b06103573660046121fb565b610980565b34801561036857600080fd5b506102b06103773660046122eb565b6109cd565b34801561038857600080fd5b506102786103973660046121fb565b610a0e565b3480156103a857600080fd5b50600e546102269060ff1681565b3480156103c257600080fd5b506101f36103d13660046122eb565b610a19565b3480156103e257600080fd5b506102b0610a68565b3480156103f757600080fd5b506102b0610a7c565b34801561040c57600080fd5b506000546001600160a01b0316610278565b34801561042a57600080fd5b5061024b610a98565b6102b06104413660046121fb565b610aa7565b34801561045257600080fd5b506102b0610461366004612397565b610c23565b34801561047257600080fd5b506102b061048136600461241c565b610cb8565b34801561049257600080fd5b5061024b6104a13660046121fb565b610d37565b3480156104b257600080fd5b506102b06104c1366004612560565b610d79565b3480156104d257600080fd5b506105086104e13660046121fb565b60096020526000908152604090205467ffffffffffffffff80821691600160401b90041682565b6040805167ffffffffffffffff9384168152929091166020830152016101fd565b34801561053557600080fd5b506105496105443660046125ab565b610f4c565b6040516101fd91906125e0565b34801561056257600080fd5b506102b06105713660046125ab565b611051565b34801561058257600080fd5b5061022661059136600461263d565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b3480156105cb57600080fd5b506102b06105da3660046122eb565b61123d565b3480156105eb57600080fd5b506102b06105fa3660046122eb565b61127a565b60006301ffc9a760e01b6001600160e01b03198316148061063057506380ac58cd60e01b6001600160e01b03198316145b8061064b5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600380546106609061266b565b80601f016020809104026020016040519081016040528092919081815260200182805461068c9061266b565b80156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b5050505050905090565b60006106ee826112f0565b61070b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b600061073282610a0e565b9050336001600160a01b03821614610788576001600160a01b038116600090815260086020908152604080832033845290915290205460ff16610788576040516367d9dca160e11b815260040160405180910390fd5b600082815260076020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b606060006107fe83610a19565b9050806000036108225760408051600080825260208201909252905b509392505050565b8067ffffffffffffffff81111561083b5761083b6123d5565b604051908082528060200260200182016040528015610864578160200160208202803683370190505b509150600060015b6001546000190181116108df578183146108df57846001600160a01b031661089382610a0e565b6001600160a01b0316036108cd57808483815181106108b4576108b461269f565b6020908102919091010152816108c9816126cb565b9250505b806108d7816126cb565b91505061086c565b50505b50919050565b600e54604051636918579d60e11b81526001600160a01b03858116600483015284811660248301526101009092049091169063d230af3a90604401600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b50505050610960838383611325565b505050565b61096083838360405180602001604052806000815250610cb8565b60008181526009602052604090205467ffffffffffffffff16156109bf57604051635034a20760e01b8152600481018290526024015b60405180910390fd5b6109ca8160016114f1565b50565b6109d5611667565b6040516001600160a01b038216904780156108fc02916000818181858888f19350505050158015610a0a573d6000803e3d6000fd5b5050565b600061064b826116c1565b60006001600160a01b038216610a42576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610a70611667565b610a7a6000611737565b565b610a84611667565b600e805460ff19811660ff90911615179055565b6060600480546106609061266b565b600e5460ff16610aca57604051630fe219dd60e21b815260040160405180910390fd5b6002546001546113889183910360001901610ae591906126e4565b1115610b045760405163b03ef06960e01b815260040160405180910390fd5b801580610b115750600a81115b15610b2f5760405163011674e560e71b815260040160405180910390fd5b600a54610b4790829067ffffffffffffffff166126f7565b3414610b6657604051636992e1ff60e01b815260040160405180910390fd5b60015b818111610bb75760025460015460009183910360001901610b8a91906126e4565b9050610b9581611794565b6000918252600d60205260409091205580610baf816126cb565b915050610b69565b50600e5460405163632447c960e01b81523360048201526101009091046001600160a01b03169063632447c990602401600060405180830381600087803b158015610c0157600080fd5b505af1158015610c15573d6000803e3d6000fd5b505050506109ca33826117f2565b336001600160a01b03831603610c4c5760405163b06307db60e01b815260040160405180910390fd5b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600e54604051636918579d60e11b81526001600160a01b03868116600483015285811660248301526101009092049091169063d230af3a90604401600060405180830381600087803b158015610d0d57600080fd5b505af1158015610d21573d6000803e3d6000fd5b50505050610d318484848461180c565b50505050565b6060610d42826112f0565b610d5f57604051630a14c4b560e41b815260040160405180910390fd5b6000828152600d602052604090205461064b908390611850565b6000610d84826118fd565b905060005b8351811015610f0357336001600160a01b0316610dbe858381518110610db157610db161269f565b6020026020010151610a0e565b6001600160a01b031614610de5576040516359dc379f60e01b815260040160405180910390fd5b60096000858381518110610dfb57610dfb61269f565b60209081029190910181015182528101919091526040016000205467ffffffffffffffff1615610e5b57838181518110610e3757610e3761269f565b60200260200101516040516328f0990960e11b81526004016109b691815260200190565b60405180604001604052804267ffffffffffffffff1681526020018367ffffffffffffffff1681525060096000868481518110610e9a57610e9a61269f565b60209081029190910181015182528181019290925260400160002082518154939092015167ffffffffffffffff908116600160401b026fffffffffffffffffffffffffffffffff1990941692169190911791909117905580610efb816126cb565b915050610d89565b50336001600160a01b03167ffb8aecb8b23012599b556fb33ec46f8109af4272df44fda6106fd79601b9cb7e8483604051610f3f929190612716565b60405180910390a2505050565b60606000825167ffffffffffffffff811115610f6a57610f6a6123d5565b604051908082528060200260200182016040528015610faf57816020015b6040805180820190915260008082526020820152815260200190600190039081610f885790505b50905060005b835181101561104a5760096000858381518110610fd457610fd461269f565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b9091041691810191909152825183908390811061102c5761102c61269f565b60200260200101819052508080611042906126cb565b915050610fb5565b5092915050565b60005b81518110156111f8576000600960008484815181106110755761107561269f565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b9091041691810191909152835190915033906110d690859085908110610db157610db161269f565b6001600160a01b0316146110fd576040516359dc379f60e01b815260040160405180910390fd5b805167ffffffffffffffff16600003611146578282815181106111225761112261269f565b602002602001015160405163220d012160e11b81526004016109b691815260200190565b60208101518151429161115891612742565b67ffffffffffffffff16111561119e5782828151811061117a5761117a61269f565b60200260200101516040516360a612c760e01b81526004016109b691815260200190565b600960008484815181106111b4576111b461269f565b602090810291909101810151825281019190915260400160002080546fffffffffffffffffffffffffffffffff1916905550806111f0816126cb565b915050611054565b50336001600160a01b03167f8537ffc096ba30690173694a1630e9cdad3b912b48980d0127edbcfe80076b61826040516112329190612343565b60405180910390a250565b611245611667565b600e80546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b611282611667565b6001600160a01b0381166112e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109b6565b6109ca81611737565b600081600111158015611304575060015482105b801561064b575050600090815260056020526040902054600160e01b161590565b6000611330826116c1565b9050836001600160a01b0316816001600160a01b0316146113635760405162a1148160e81b815260040160405180910390fd5b6000828152600760205260409020805461138f8187335b6001600160a01b039081169116811491141790565b6113d7576001600160a01b038616600090815260086020908152604080832033845290915290205460ff166113d757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166113fe57604051633a954ecd60e21b815260040160405180910390fd5b61140b8686866001611960565b801561141657600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040812091909155600160e11b841690036114a8576001840160008181526005602052604081205490036114a65760015481146114a65760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b60006114fc836116c1565b90508060008061151a86600090815260076020526040902080549091565b9150915084156115775761152f81843361137a565b611577576001600160a01b038316600090815260086020908152604080832033845290915290205460ff1661157757604051632ce44b5f60e11b815260040160405180910390fd5b611585836000886001611960565b801561159057600082555b6001600160a01b038316600081815260066020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260056020526040812091909155600160e11b8516900361161e5760018601600081815260056020526040812054900361161c57600154811461161c5760008181526005602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060028054600101905550505050565b6000546001600160a01b03163314610a7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b6565b6000818060011161171e5760015481101561171e5760008181526005602052604081205490600160e01b8216900361171c575b806000036117155750600019016000818152600560205260409020546116f4565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000424433846040516020016117d59493929190938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b604051602081830303815290604052805190602001209050919050565b610a0a8282604051806020016040528060008152506119e7565b6118178484846108e8565b6001600160a01b0383163b15610d315761183384848484611a4d565b610d31576040516368d2bf6b60e11b815260040160405180910390fd5b6060600061185d83611b39565b90506118d561186b82611c05565b61187486611cb9565b8351602085015161188490611cb9565b6118918660400151611cb9565b61189e8760600151611cb9565b6118ab8860800151611cb9565b6040516020016118c1979695949392919061277f565b604051602081830303815290604052611dba565b6040516020016118e591906129df565b60405160208183030381529060405291505092915050565b60008082600281111561191257611912612a24565b0361191d575062278d005b600182600281111561193157611931612a24565b0361193c5750624f1a005b600282600281111561195057611950612a24565b0361195b57506276a7005b919050565b6001600160a01b03841615610d315760005b818110156119e0576009600061198883866126e4565b815260208101919091526040016000205467ffffffffffffffff16156119ce576119b281846126e4565b604051635034a20760e01b81526004016109b691815260200190565b806119d8816126cb565b915050611972565b5050505050565b6119f18383611f0d565b6001600160a01b0383163b15610960576001548281035b611a1b6000868380600101945086611a4d565b611a38576040516368d2bf6b60e11b815260040160405180910390fd5b818110611a085781600154146119e057600080fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611a82903390899088908890600401612a3a565b6020604051808303816000875af1925050508015611abd575060408051601f3d908101601f19168201909252611aba91810190612a76565b60015b611b1b573d808015611aeb576040519150601f19603f3d011682016040523d82523d6000602084013e611af0565b606091505b508051600003611b13576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b611b6b6040518060a0016040528060608152602001600081526020016000815260200160008152602001600081525090565b6040518060a00160405280611b81846000612018565b8152602001611b956046600686901c612aa9565b611ba090601f6126e4565b8152602001611bb46046600c86901c612aa9565b611bbf90601f6126e4565b8152602001611bd36046601286901c612aa9565b611bde90601f6126e4565b8152602001611bf26046601886901c612aa9565b611bfd90601f6126e4565b905292915050565b6060611c938260000151604051602001611c1f9190612abd565b604051602081830303815290604052611c3b8460200151611cb9565b611c488560400151611cb9565b611c558660600151611cb9565b611c628760800151611cb9565b604051602001611c759493929190612db6565b60408051601f19818403018152908290526118c19291602001612f76565b604051602001611ca39190612fa5565b6040516020818303038152906040529050919050565b606081600003611ce05750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d0a5780611cf4816126cb565b9150611d039050600a83612fea565b9150611ce4565b60008167ffffffffffffffff811115611d2557611d256123d5565b6040519080825280601f01601f191660200182016040528015611d4f576020820181803683370190505b5090505b8415611b3157611d64600183612ffe565b9150611d71600a86612aa9565b611d7c9060306126e4565b60f81b818381518110611d9157611d9161269f565b60200101906001600160f81b031916908160001a905350611db3600a86612fea565b9450611d53565b60608151600003611dd957505060408051602081019091526000815290565b60006040518060600160405280604081526020016130126040913990506000600384516002611e0891906126e4565b611e129190612fea565b611e1d9060046126f7565b67ffffffffffffffff811115611e3557611e356123d5565b6040519080825280601f01601f191660200182016040528015611e5f576020820181803683370190505b509050600182016020820185865187015b80821015611ecb576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611e70565b5050600386510660018114611ee75760028114611efa57611f02565b603d6001830353603d6002830353611f02565b603d60018303535b509195945050505050565b6001546000829003611f325760405163b562e8dd60e01b815260040160405180910390fd5b611f3f6000848385611960565b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114611fee57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611fb6565b508160000361200f57604051622e076360e81b815260040160405180910390fd5b60015550505050565b6060601e821061206a5760405162461bcd60e51b815260206004820152601360248201527f6f6666657374206f7574206f662072616e67650000000000000000000000000060448201526064016109b6565b60408051600680825281830190925260009160208201818036833701905050905060005b600381101561081a5760408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201526004866120cb87856126e4565b602081106120db576120db61269f565b1a60f81b6001600160f81b031916901c60f81c60ff16815181106121015761210161269f565b01602001516001600160f81b0319168261211c8360026126f7565b8151811061212c5761212c61269f565b60200101906001600160f81b031916908160001a90535060408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528561217586846126e4565b602081106121855761218561269f565b825191901a600f1690811061219c5761219c61269f565b01602001516001600160f81b031916826121b78360026126f7565b6121c29060016126e4565b815181106121d2576121d261269f565b60200101906001600160f81b031916908160001a905350806121f3816126cb565b91505061208e565b60006020828403121561220d57600080fd5b5035919050565b6001600160e01b0319811681146109ca57600080fd5b60006020828403121561223c57600080fd5b813561171581612214565b60005b8381101561226257818101518382015260200161224a565b50506000910152565b60008151808452612283816020860160208601612247565b601f01601f19169290920160200192915050565b602081526000611715602083018461226b565b6001600160a01b03811681146109ca57600080fd5b600080604083850312156122d257600080fd5b82356122dd816122aa565b946020939093013593505050565b6000602082840312156122fd57600080fd5b8135611715816122aa565b600081518084526020808501945080840160005b838110156123385781518752958201959082019060010161231c565b509495945050505050565b6020815260006117156020830184612308565b60008060006060848603121561236b57600080fd5b8335612376816122aa565b92506020840135612386816122aa565b929592945050506040919091013590565b600080604083850312156123aa57600080fd5b82356123b5816122aa565b9150602083013580151581146123ca57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612414576124146123d5565b604052919050565b6000806000806080858703121561243257600080fd5b843561243d816122aa565b935060208581013561244e816122aa565b935060408601359250606086013567ffffffffffffffff8082111561247257600080fd5b818801915088601f83011261248657600080fd5b813581811115612498576124986123d5565b6124aa601f8201601f191685016123eb565b915080825289848285010111156124c057600080fd5b808484018584013760008482840101525080935050505092959194509250565b600082601f8301126124f157600080fd5b8135602067ffffffffffffffff82111561250d5761250d6123d5565b8160051b61251c8282016123eb565b928352848101820192828101908785111561253657600080fd5b83870192505b848310156125555782358252918301919083019061253c565b979650505050505050565b6000806040838503121561257357600080fd5b823567ffffffffffffffff81111561258a57600080fd5b612596858286016124e0565b9250506020830135600381106123ca57600080fd5b6000602082840312156125bd57600080fd5b813567ffffffffffffffff8111156125d457600080fd5b611b31848285016124e0565b602080825282518282018190526000919060409081850190868401855b82811015612630578151805167ffffffffffffffff908116865290870151168685015292840192908501906001016125fd565b5091979650505050505050565b6000806040838503121561265057600080fd5b823561265b816122aa565b915060208301356123ca816122aa565b600181811c9082168061267f57607f821691505b6020821081036108e257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016126dd576126dd6126b5565b5060010190565b8082018082111561064b5761064b6126b5565b6000816000190483118215151615612711576127116126b5565b500290565b6040815260006127296040830185612308565b905067ffffffffffffffff831660208301529392505050565b67ffffffffffffffff81811683821601908082111561104a5761104a6126b5565b60008151612775818560208601612247565b9290920192915050565b7f7b226e616d65223a225363756465726961204e4654222c2022696d616765223a8152601160f91b6020820152600088516127c1816021850160208d01612247565b7f222c2022746f6b656e4964223a2200000000000000000000000000000000000060219184019182015288516127fe81602f840160208d01612247565b6b1116101131b7b637b9111d1160a11b602f9290910191820152875161282b81603b840160208c01612247565b6b1116101139b832b2b2111d1160a11b603b92909101918201528651612858816047840160208b01612247565b6129d06129006128fa6128d16128cb6128a261289c6047888a01017f222c2022616363656c65726174696f6e223a2200000000000000000000000000815260130190565b8d612763565b7f222c202268616e646c696e67223a2200000000000000000000000000000000008152600f0190565b8a612763565b7f222c202272656c696162696c697479223a220000000000000000000000000000815260120190565b87612763565b7f222c20226465736372697074696f6e223a20225363756465726961206973206181527f2066756c6c79206f6e2d636861696e20726163696e67204e46542065636f737960208201527f7374656d207468617420616c6c6f7773206d696e74696e672c206d657461646160408201527f746120616e6420696d6167652067656e65726174696f6e2c20726163696e672060608201527f616e642062657474696e672c20616c6c2072756e6e696e67206f6e20506f6c79608082015265676f6e2e227d60d01b60a082015260a60190565b9b9a5050505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251612a1781601d850160208701612247565b91909101601d0192915050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152612a6c608083018461226b565b9695505050505050565b600060208284031215612a8857600080fd5b815161171581612214565b634e487b7160e01b600052601260045260246000fd5b600082612ab857612ab8612a93565b500690565b7f3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d22555481526523169c111f9f60d11b60208201527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060268201527f30302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e60468201527f77332e6f72672f313939392f786c696e6b222076657273696f6e3d22312e312260668201527f2076696577426f783d223020302034303020343030222070726573657276654160868201527f7370656374526174696f3d22784d6964594d6964206d656574223e000000000060a68201527f3c7374796c6520747970653d22746578742f637373223e3c215b43444154415b60c18201527f74657874207b20666f6e742d66616d696c793a206d6f6e6f73706163653b206660e18201527f6f6e742d73697a653a20323170783b7d202e6831207b666f6e742d73697a653a6101018201527f20343070783b20666f6e742d7765696768743a203630303b7d5d5d3e3c2f7374610121820152633cb6329f60e11b6101418201527f3c726563742077696474683d2234303022206865696768743d223430302220666101458201527f696c6c3d222366666666666622202f3e000000000000000000000000000000006101658201526000611715612d67612d18612d086128fa61017587017f3c726563742077696474683d2234303022206865696768743d2234303022206681527f696c6c2d6f7061636974793d22302e36222066696c6c3d222300000000000000602082015260390190565b631110179f60e11b815260040190565b7f3c7465787420636c6173733d2268312220783d2235302220793d223730223e5381527f63756465726961204e46543c2f746578743e0000000000000000000000000000602082015260320190565b7f3c7465787420783d2237302220793d2232323022207374796c653d22666f6e7481527f2d73697a653a31333070783b223ef09f8f8eefb88ff09f92a83c2f746578743e602082015260400190565b7f3c7465787420783d2232302220793d2232383022207374796c653d22666f6e7481527f2d73697a653a313870783b223ef09f94a52073706565643a2000000000000000602082015260008551612e14816039850160208a01612247565b8083019050661e17ba32bc3a1f60c91b8060398301527f3c7465787420783d2232302220793d2233313022207374796c653d22666f6e7460408301527f2d73697a653a313870783b223ee29aa120616363656c65726174696f6e3a200060608301528651612e8981607f850160208b01612247565b607f9201918201527f3c7465787420783d2232302220793d2233343022207374796c653d22666f6e7460868201527f2d73697a653a313870783b223ee29a99efb88f2068616e646c696e673a20000060a6820152612555612f64612ef76128fa612f0a8260c487018b612763565b661e17ba32bc3a1f60c91b815260070190565b7f3c7465787420783d2232302220793d2233373022207374796c653d22666f6e7481527f2d73697a653a313870783b223ef09f9ba0efb88f2072656c696162696c69747960208201526101d160f51b604082015260420190565b651e17b9bb339f60d11b815260060190565b60008351612f88818460208801612247565b835190830190612f9c818360208801612247565b01949350505050565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815260008251612fdd81601a850160208701612247565b91909101601a0192915050565b600082612ff957612ff9612a93565b500490565b8181038181111561064b5761064b6126b556fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220f8a6d1d6b41ba005752914b513303709cc848c00ea5b30c3b8ba97f998afd62a64736f6c63430008100033";

type ScuderiaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScuderiaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Scuderia__factory extends ContractFactory {
  constructor(...args: ScuderiaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Scuderia> {
    return super.deploy(_ownerAddress, overrides || {}) as Promise<Scuderia>;
  }
  override getDeployTransaction(
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ownerAddress, overrides || {});
  }
  override attach(address: string): Scuderia {
    return super.attach(address) as Scuderia;
  }
  override connect(signer: Signer): Scuderia__factory {
    return super.connect(signer) as Scuderia__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScuderiaInterface {
    return new utils.Interface(_abi) as ScuderiaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Scuderia {
    return new Contract(address, _abi, signerOrProvider) as Scuderia;
  }
}
