/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Scuderia,
  ScuderiaInterface,
} from "../../../contracts/implementations/Scuderia";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "CannotTransferStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPaymentAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "SupplyWillBeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyStaked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenInLockin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockinPeriod",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [],
    name: "MINT_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "getStakeStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "timeStaked",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockinPeriod",
            type: "uint64",
          },
        ],
        internalType: "struct IStakable.StakedToken[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadataSeed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Scoot",
        name: "_address",
        type: "address",
      },
    ],
    name: "setScootContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "enum IStakable.LockinPeriod",
        name: "_lockin",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint64",
        name: "timeStaked",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockinPeriod",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_walletOwner",
        type: "address",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405267016345785d8a0000600a55600e805460ff191690553480156200002757600080fd5b50604051620035e4380380620035e48339810160408190526200004a9162000279565b60405180604001604052806008815260200167536375646572696160c01b8152506040518060400160405280600381526020016214d0d160ea1b8152508181620000a36200009d6200014860201b60201c565b6200014c565b6003620000b1838262000350565b506004620000c0828262000350565b5050600180555050506001600160a01b038116620001255760405162461bcd60e51b815260206004820152601b60248201527f6f776e657220616464726573732063616e6e6f7420626520307830000000000060448201526064015b60405180910390fd5b6001600160a01b0381163314620001415762000141816200019c565b506200041c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001a66200021b565b6001600160a01b0381166200020d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200011c565b62000218816200014c565b50565b6000546001600160a01b03163314620002775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200011c565b565b6000602082840312156200028c57600080fd5b81516001600160a01b0381168114620002a457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002d657607f821691505b602082108103620002f757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034b57600081815260208120601f850160051c81016020861015620003265750805b601f850160051c820191505b81811015620003475782815560010162000332565b5050505b505050565b81516001600160401b038111156200036c576200036c620002ab565b62000384816200037d8454620002c1565b84620002fd565b602080601f831160018114620003bc5760008415620003a35750858301515b600019600386901b1c1916600185901b17855562000347565b600085815260208120601f198616915b82811015620003ed57888601518255948401946001909101908401620003cc565b50858210156200040c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6131b8806200042c6000396000f3fe6080604052600436106101d75760003560e01c80637d8966e411610102578063c87b56dd11610095578063e449f34111610064578063e449f341146105a2578063e985e9c5146105c2578063ea6206fd1461060b578063f2fde38b1461062b57600080fd5b8063c87b56dd146104d2578063d1ca41a9146104f2578063d5a44f8614610512578063dab4fe4e1461057557600080fd5b8063a0712d68116100d1578063a0712d6814610469578063a22cb4651461047c578063b88d4fde1461049c578063c002d23d146104bc57600080fd5b80637d8966e4146104015780638da5cb5b1461041657806391b7f5ed1461043457806395d89b411461045457600080fd5b806323b872dd1161017a5780636352211e116101495780636352211e1461039257806368428a1b146103b257806370a08231146103cc578063715018a6146103ec57600080fd5b806323b872dd1461031257806342842e0e1461033257806342966c681461035257806351cff8d91461037257600080fd5b8063081812fc116101b6578063081812fc1461026e578063095ea7b3146102a657806318160ddd146102c85780631982640c146102e557600080fd5b8062ad1e3b146101dc57806301ffc9a71461021c57806306fdde031461024c575b600080fd5b3480156101e857600080fd5b506102096101f7366004612287565b600d6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561022857600080fd5b5061023c6102373660046122b6565b61064b565b6040519015158152602001610213565b34801561025857600080fd5b5061026161069d565b6040516102139190612323565b34801561027a57600080fd5b5061028e610289366004612287565b61072f565b6040516001600160a01b039091168152602001610213565b3480156102b257600080fd5b506102c66102c136600461234b565b610773565b005b3480156102d457600080fd5b506002546001540360001901610209565b3480156102f157600080fd5b50610305610300366004612377565b61083d565b60405161021391906123cf565b34801561031e57600080fd5b506102c661032d3660046123e2565b610934565b34801561033e57600080fd5b506102c661034d3660046123e2565b6109c1565b34801561035e57600080fd5b506102c661036d366004612287565b6109dc565b34801561037e57600080fd5b506102c661038d366004612377565b610a29565b34801561039e57600080fd5b5061028e6103ad366004612287565b610a6a565b3480156103be57600080fd5b50600e5461023c9060ff1681565b3480156103d857600080fd5b506102096103e7366004612377565b610a75565b3480156103f857600080fd5b506102c6610ac4565b34801561040d57600080fd5b506102c6610ad8565b34801561042257600080fd5b506000546001600160a01b031661028e565b34801561044057600080fd5b506102c661044f366004612287565b610af4565b34801561046057600080fd5b50610261610b01565b6102c6610477366004612287565b610b10565b34801561048857600080fd5b506102c6610497366004612423565b610c82565b3480156104a857600080fd5b506102c66104b73660046124a8565b610d17565b3480156104c857600080fd5b50610209600a5481565b3480156104de57600080fd5b506102616104ed366004612287565b610da6565b3480156104fe57600080fd5b506102c661050d3660046125ec565b610de8565b34801561051e57600080fd5b5061055461052d366004612287565b60096020526000908152604090205467ffffffffffffffff80821691600160401b90041682565b6040805167ffffffffffffffff938416815292909116602083015201610213565b34801561058157600080fd5b50610595610590366004612637565b610fbb565b604051610213919061266c565b3480156105ae57600080fd5b506102c66105bd366004612637565b6110c0565b3480156105ce57600080fd5b5061023c6105dd3660046126c9565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b34801561061757600080fd5b506102c6610626366004612377565b6112ac565b34801561063757600080fd5b506102c6610646366004612377565b6112e9565b60006301ffc9a760e01b6001600160e01b03198316148061067c57506380ac58cd60e01b6001600160e01b03198316145b806106975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600380546106ac906126f7565b80601f01602080910402602001604051908101604052809291908181526020018280546106d8906126f7565b80156107255780601f106106fa57610100808354040283529160200191610725565b820191906000526020600020905b81548152906001019060200180831161070857829003601f168201915b5050505050905090565b600061073a8261135f565b610757576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b600061077e82610a6a565b9050336001600160a01b038216146107d4576001600160a01b038116600090815260086020908152604080832033845290915290205460ff166107d4576040516367d9dca160e11b815260040160405180910390fd5b600082815260076020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6060600061084a83610a75565b90508060000361086e5760408051600080825260208201909252905b509392505050565b8067ffffffffffffffff81111561088757610887612461565b6040519080825280602002602001820160405280156108b0578160200160208202803683370190505b509150600060015b60015460001901811161092b5781831461092b57846001600160a01b03166108df82610a6a565b6001600160a01b03160361091957808483815181106109005761090061272b565b60209081029190910101528161091581612757565b9250505b8061092381612757565b9150506108b8565b50505b50919050565b6001600160a01b038316156109b157600e54604051636918579d60e11b81526001600160a01b03858116600483015284811660248301526101009092049091169063d230af3a90604401600060405180830381600087803b15801561099857600080fd5b505af11580156109ac573d6000803e3d6000fd5b505050505b6109bc838383611394565b505050565b6109bc83838360405180602001604052806000815250610d17565b60008181526009602052604090205467ffffffffffffffff1615610a1b57604051635034a20760e01b8152600481018290526024015b60405180910390fd5b610a26816001611560565b50565b610a316116d6565b6040516001600160a01b038216904780156108fc02916000818181858888f19350505050158015610a66573d6000803e3d6000fd5b5050565b600061069782611730565b60006001600160a01b038216610a9e576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610acc6116d6565b610ad660006117a6565b565b610ae06116d6565b600e805460ff19811660ff90911615179055565b610afc6116d6565b600a55565b6060600480546106ac906126f7565b600e5460ff16610b3357604051630fe219dd60e21b815260040160405180910390fd5b6002546001546113889183910360001901610b4e9190612770565b1115610b6d5760405163b03ef06960e01b815260040160405180910390fd5b801580610b7a5750600a81115b15610b985760405163011674e560e71b815260040160405180910390fd5b80600a54610ba69190612783565b3414610bc557604051636992e1ff60e01b815260040160405180910390fd5b60015b818111610c165760025460015460009183910360001901610be99190612770565b9050610bf481611803565b6000918252600d60205260409091205580610c0e81612757565b915050610bc8565b50600e5460405163632447c960e01b81523360048201526101009091046001600160a01b03169063632447c990602401600060405180830381600087803b158015610c6057600080fd5b505af1158015610c74573d6000803e3d6000fd5b50505050610a263382611861565b336001600160a01b03831603610cab5760405163b06307db60e01b815260040160405180910390fd5b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03841615610d9457600e54604051636918579d60e11b81526001600160a01b03868116600483015285811660248301526101009092049091169063d230af3a90604401600060405180830381600087803b158015610d7b57600080fd5b505af1158015610d8f573d6000803e3d6000fd5b505050505b610da08484848461187b565b50505050565b6060610db18261135f565b610dce57604051630a14c4b560e41b815260040160405180910390fd5b6000828152600d60205260409020546106979083906118bf565b6000610df3826119a7565b905060005b8351811015610f7257336001600160a01b0316610e2d858381518110610e2057610e2061272b565b6020026020010151610a6a565b6001600160a01b031614610e54576040516359dc379f60e01b815260040160405180910390fd5b60096000858381518110610e6a57610e6a61272b565b60209081029190910181015182528101919091526040016000205467ffffffffffffffff1615610eca57838181518110610ea657610ea661272b565b60200260200101516040516328f0990960e11b8152600401610a1291815260200190565b60405180604001604052804267ffffffffffffffff1681526020018367ffffffffffffffff1681525060096000868481518110610f0957610f0961272b565b60209081029190910181015182528181019290925260400160002082518154939092015167ffffffffffffffff908116600160401b026fffffffffffffffffffffffffffffffff1990941692169190911791909117905580610f6a81612757565b915050610df8565b50336001600160a01b03167ffb8aecb8b23012599b556fb33ec46f8109af4272df44fda6106fd79601b9cb7e8483604051610fae9291906127a2565b60405180910390a2505050565b60606000825167ffffffffffffffff811115610fd957610fd9612461565b60405190808252806020026020018201604052801561101e57816020015b6040805180820190915260008082526020820152815260200190600190039081610ff75790505b50905060005b83518110156110b957600960008583815181106110435761104361272b565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b9091041691810191909152825183908390811061109b5761109b61272b565b602002602001018190525080806110b190612757565b915050611024565b5092915050565b60005b8151811015611267576000600960008484815181106110e4576110e461272b565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b90910416918101919091528351909150339061114590859085908110610e2057610e2061272b565b6001600160a01b03161461116c576040516359dc379f60e01b815260040160405180910390fd5b805167ffffffffffffffff166000036111b5578282815181106111915761119161272b565b602002602001015160405163220d012160e11b8152600401610a1291815260200190565b6020810151815142916111c7916127ce565b67ffffffffffffffff16111561120d578282815181106111e9576111e961272b565b60200260200101516040516360a612c760e01b8152600401610a1291815260200190565b600960008484815181106112235761122361272b565b602090810291909101810151825281019190915260400160002080546fffffffffffffffffffffffffffffffff19169055508061125f81612757565b9150506110c3565b50336001600160a01b03167f8537ffc096ba30690173694a1630e9cdad3b912b48980d0127edbcfe80076b61826040516112a191906123cf565b60405180910390a250565b6112b46116d6565b600e80546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6112f16116d6565b6001600160a01b0381166113565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a12565b610a26816117a6565b600081600111158015611373575060015482105b8015610697575050600090815260056020526040902054600160e01b161590565b600061139f82611730565b9050836001600160a01b0316816001600160a01b0316146113d25760405162a1148160e81b815260040160405180910390fd5b600082815260076020526040902080546113fe8187335b6001600160a01b039081169116811491141790565b611446576001600160a01b038616600090815260086020908152604080832033845290915290205460ff1661144657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661146d57604051633a954ecd60e21b815260040160405180910390fd5b61147a8686866001611a0a565b801561148557600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040812091909155600160e11b84169003611517576001840160008181526005602052604081205490036115155760015481146115155760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b600061156b83611730565b90508060008061158986600090815260076020526040902080549091565b9150915084156115e65761159e8184336113e9565b6115e6576001600160a01b038316600090815260086020908152604080832033845290915290205460ff166115e657604051632ce44b5f60e11b815260040160405180910390fd5b6115f4836000886001611a0a565b80156115ff57600082555b6001600160a01b038316600081815260066020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260056020526040812091909155600160e11b8516900361168d5760018601600081815260056020526040812054900361168b57600154811461168b5760008181526005602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060028054600101905550505050565b6000546001600160a01b03163314610ad65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b6000818060011161178d5760015481101561178d5760008181526005602052604081205490600160e01b8216900361178b575b80600003611784575060001901600081815260056020526040902054611763565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000424433846040516020016118449493929190938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b604051602081830303815290604052805190602001209050919050565b610a66828260405180602001604052806000815250611a91565b611886848484610934565b6001600160a01b0383163b15610da0576118a284848484611af7565b610da0576040516368d2bf6b60e11b815260040160405180910390fd5b606060006118cc83611be3565b905061197f6118da82611caf565b6118e386611d45565b6118f08460200151611d45565b6040516020016119029392919061280b565b60405160208183030381529060405261191e8360400151611d45565b61192b8460600151611d45565b6119388560800151611d45565b855160405161194d94939291906020016129c0565b60408051601f198184030181529082905261196b9291602001612b1a565b604051602081830303815290604052611e46565b60405160200161198f9190612b49565b60405160208183030381529060405291505092915050565b6000808260028111156119bc576119bc612b8e565b036119c7575062278d005b60018260028111156119db576119db612b8e565b036119e65750624f1a005b60028260028111156119fa576119fa612b8e565b03611a0557506276a7005b919050565b6001600160a01b03841615610da05760005b81811015611a8a5760096000611a328386612770565b815260208101919091526040016000205467ffffffffffffffff1615611a7857611a5c8184612770565b604051635034a20760e01b8152600401610a1291815260200190565b80611a8281612757565b915050611a1c565b5050505050565b611a9b8383611f99565b6001600160a01b0383163b156109bc576001548281035b611ac56000868380600101945086611af7565b611ae2576040516368d2bf6b60e11b815260040160405180910390fd5b818110611ab2578160015414611a8a57600080fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611b2c903390899088908890600401612ba4565b6020604051808303816000875af1925050508015611b67575060408051601f3d908101601f19168201909252611b6491810190612bd6565b60015b611bc5573d808015611b95576040519150601f19603f3d011682016040523d82523d6000602084013e611b9a565b606091505b508051600003611bbd576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b611c156040518060a0016040528060608152602001600081526020016000815260200160008152602001600081525090565b6040518060a00160405280611c2b8460006120a4565b8152602001611c3f6046600686901c612c09565b611c4a90601f612770565b8152602001611c5e6046600c86901c612c09565b611c6990601f612770565b8152602001611c7d6046601286901c612c09565b611c8890601f612770565b8152602001611c9c6046601886901c612c09565b611ca790601f612770565b905292915050565b6060611d1f8260000151604051602001611cc99190612c1d565b604051602081830303815290604052611ce58460200151611d45565b611cf28560400151611d45565b611cff8660600151611d45565b611d0c8760800151611d45565b60405160200161194d9493929190612f16565b604051602001611d2f91906130d6565b6040516020818303038152906040529050919050565b606081600003611d6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d965780611d8081612757565b9150611d8f9050600a8361311b565b9150611d70565b60008167ffffffffffffffff811115611db157611db1612461565b6040519080825280601f01601f191660200182016040528015611ddb576020820181803683370190505b5090505b8415611bdb57611df060018361312f565b9150611dfd600a86612c09565b611e08906030612770565b60f81b818381518110611e1d57611e1d61272b565b60200101906001600160f81b031916908160001a905350611e3f600a8661311b565b9450611ddf565b60608151600003611e6557505060408051602081019091526000815290565b60006040518060600160405280604081526020016131436040913990506000600384516002611e949190612770565b611e9e919061311b565b611ea9906004612783565b67ffffffffffffffff811115611ec157611ec1612461565b6040519080825280601f01601f191660200182016040528015611eeb576020820181803683370190505b509050600182016020820185865187015b80821015611f57576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611efc565b5050600386510660018114611f735760028114611f8657611f8e565b603d6001830353603d6002830353611f8e565b603d60018303535b509195945050505050565b6001546000829003611fbe5760405163b562e8dd60e01b815260040160405180910390fd5b611fcb6000848385611a0a565b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461207a57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101612042565b508160000361209b57604051622e076360e81b815260040160405180910390fd5b60015550505050565b6060601e82106120f65760405162461bcd60e51b815260206004820152601360248201527f6f6666657374206f7574206f662072616e6765000000000000000000000000006044820152606401610a12565b60408051600680825281830190925260009160208201818036833701905050905060005b60038110156108665760408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201526004866121578785612770565b602081106121675761216761272b565b1a60f81b6001600160f81b031916901c60f81c60ff168151811061218d5761218d61272b565b01602001516001600160f81b031916826121a8836002612783565b815181106121b8576121b861272b565b60200101906001600160f81b031916908160001a90535060408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b6020820152856122018684612770565b602081106122115761221161272b565b825191901a600f169081106122285761222861272b565b01602001516001600160f81b03191682612243836002612783565b61224e906001612770565b8151811061225e5761225e61272b565b60200101906001600160f81b031916908160001a9053508061227f81612757565b91505061211a565b60006020828403121561229957600080fd5b5035919050565b6001600160e01b031981168114610a2657600080fd5b6000602082840312156122c857600080fd5b8135611784816122a0565b60005b838110156122ee5781810151838201526020016122d6565b50506000910152565b6000815180845261230f8160208601602086016122d3565b601f01601f19169290920160200192915050565b60208152600061178460208301846122f7565b6001600160a01b0381168114610a2657600080fd5b6000806040838503121561235e57600080fd5b823561236981612336565b946020939093013593505050565b60006020828403121561238957600080fd5b813561178481612336565b600081518084526020808501945080840160005b838110156123c4578151875295820195908201906001016123a8565b509495945050505050565b6020815260006117846020830184612394565b6000806000606084860312156123f757600080fd5b833561240281612336565b9250602084013561241281612336565b929592945050506040919091013590565b6000806040838503121561243657600080fd5b823561244181612336565b91506020830135801515811461245657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156124a0576124a0612461565b604052919050565b600080600080608085870312156124be57600080fd5b84356124c981612336565b93506020858101356124da81612336565b935060408601359250606086013567ffffffffffffffff808211156124fe57600080fd5b818801915088601f83011261251257600080fd5b81358181111561252457612524612461565b612536601f8201601f19168501612477565b9150808252898482850101111561254c57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600082601f83011261257d57600080fd5b8135602067ffffffffffffffff82111561259957612599612461565b8160051b6125a8828201612477565b92835284810182019282810190878511156125c257600080fd5b83870192505b848310156125e1578235825291830191908301906125c8565b979650505050505050565b600080604083850312156125ff57600080fd5b823567ffffffffffffffff81111561261657600080fd5b6126228582860161256c565b92505060208301356003811061245657600080fd5b60006020828403121561264957600080fd5b813567ffffffffffffffff81111561266057600080fd5b611bdb8482850161256c565b602080825282518282018190526000919060409081850190868401855b828110156126bc578151805167ffffffffffffffff90811686529087015116868501529284019290850190600101612689565b5091979650505050505050565b600080604083850312156126dc57600080fd5b82356126e781612336565b9150602083013561245681612336565b600181811c9082168061270b57607f821691505b60208210810361092e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161276957612769612741565b5060010190565b8082018082111561069757610697612741565b600081600019048311821515161561279d5761279d612741565b500290565b6040815260006127b56040830185612394565b905067ffffffffffffffff831660208301529392505050565b67ffffffffffffffff8181168382160190808211156110b9576110b9612741565b600081516128018185602086016122d3565b9290920192915050565b7f7b226e616d65223a225363756465726961204e4654222c2022696d616765223a8152601160f91b60208201526000845161284d8160218501602089016122d3565b7f222c2022746f6b656e4964223a22000000000000000000000000000000000000602191840191820152845161288a81602f8401602089016122d3565b7f222c20226465736372697074696f6e223a2022536375646572696120697320619101602f8101919091527f2066756c6c79206f6e2d636861696e20726163696e67204e46542065636f7379604f8201527f7374656d207468617420616c6c6f7773206d696e74696e672c206d6574616461606f8201527f746120616e6420696d6167652067656e65726174696f6e2c20726163696e6720608f8201527f616e642062657474696e672c20616c6c2072756e6e696e67206f6e20506f6c7960af8201526519dbdb8b888b60d21b60cf8201527f202261747472696275746573223a205b7b202274726169745f74797065223a2060d58201527f225370656564222c202276616c7565223a20220000000000000000000000000060f58201526129b66101088201856127ef565b9695505050505050565b7f227d2c7b202274726169745f74797065223a2022416363656c65726174696f6e81526c111610113b30b63ab2911d101160991b602082015260008551612a0e81602d850160208a016122d3565b7f227d2c7b202274726169745f74797065223a202248616e646c696e67222c2022602d91840191820152683b30b63ab2911d101160b91b604d8201528551612a5d816056840160208a016122d3565b7f227d2c7b202274726169745f74797065223a202252656c696162696c69747922605692909101918201526b1610113b30b63ab2911d101160a11b60768201528451612ab08160828401602089016122d3565b612b0e612afe612af86082858501017f227d2c7b202274726169745f74797065223a2022436f6c6f72222c202276616c8152667565223a20222360c81b602082015260270190565b876127ef565b63227d5d7d60e01b815260040190565b98975050505050505050565b60008351612b2c8184602088016122d3565b835190830190612b408183602088016122d3565b01949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251612b8181601d8501602087016122d3565b91909101601d0192915050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526129b660808301846122f7565b600060208284031215612be857600080fd5b8151611784816122a0565b634e487b7160e01b600052601260045260246000fd5b600082612c1857612c18612bf3565b500690565b7f3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d22555481526523169c111f9f60d11b60208201527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060268201527f30302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e60468201527f77332e6f72672f313939392f786c696e6b222076657273696f6e3d22312e312260668201527f2076696577426f783d223020302034303020343030222070726573657276654160868201527f7370656374526174696f3d22784d6964594d6964206d656574223e000000000060a68201527f3c7374796c6520747970653d22746578742f637373223e3c215b43444154415b60c18201527f74657874207b20666f6e742d66616d696c793a206d6f6e6f73706163653b206660e18201527f6f6e742d73697a653a20323170783b7d202e6831207b666f6e742d73697a653a6101018201527f20343070783b20666f6e742d7765696768743a203630303b7d5d5d3e3c2f7374610121820152633cb6329f60e11b6101418201527f3c726563742077696474683d2234303022206865696768743d223430302220666101458201527f696c6c3d222366666666666622202f3e000000000000000000000000000000006101658201526000611784612ec7612e78612e68612af861017587017f3c726563742077696474683d2234303022206865696768743d2234303022206681527f696c6c2d6f7061636974793d22302e36222066696c6c3d222300000000000000602082015260390190565b631110179f60e11b815260040190565b7f3c7465787420636c6173733d2268312220783d2235302220793d223730223e5381527f63756465726961204e46543c2f746578743e0000000000000000000000000000602082015260320190565b7f3c7465787420783d2237302220793d2232323022207374796c653d22666f6e7481527f2d73697a653a31333070783b223ef09f8f8eefb88ff09f92a83c2f746578743e602082015260400190565b7f3c7465787420783d2232302220793d2232383022207374796c653d22666f6e7481527f2d73697a653a313870783b223ef09f94a52073706565643a2000000000000000602082015260008551612f74816039850160208a016122d3565b8083019050661e17ba32bc3a1f60c91b8060398301527f3c7465787420783d2232302220793d2233313022207374796c653d22666f6e7460408301527f2d73697a653a313870783b223ee29aa120616363656c65726174696f6e3a200060608301528651612fe981607f850160208b016122d3565b607f9201918201527f3c7465787420783d2232302220793d2233343022207374796c653d22666f6e7460868201527f2d73697a653a313870783b223ee29a99efb88f2068616e646c696e673a20000060a68201526125e16130c4613057612af861306a8260c487018b6127ef565b661e17ba32bc3a1f60c91b815260070190565b7f3c7465787420783d2232302220793d2233373022207374796c653d22666f6e7481527f2d73697a653a313870783b223ef09f9ba0efb88f2072656c696162696c69747960208201526101d160f51b604082015260420190565b651e17b9bb339f60d11b815260060190565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081526000825161310e81601a8501602087016122d3565b91909101601a0192915050565b60008261312a5761312a612bf3565b500490565b818103818111156106975761069761274156fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122015e8a2dd15491cac2f79270398925d4716d0511c4e035a0350a7bd01f40e300464736f6c63430008100033";

type ScuderiaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScuderiaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Scuderia__factory extends ContractFactory {
  constructor(...args: ScuderiaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Scuderia> {
    return super.deploy(_ownerAddress, overrides || {}) as Promise<Scuderia>;
  }
  override getDeployTransaction(
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ownerAddress, overrides || {});
  }
  override attach(address: string): Scuderia {
    return super.attach(address) as Scuderia;
  }
  override connect(signer: Signer): Scuderia__factory {
    return super.connect(signer) as Scuderia__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScuderiaInterface {
    return new utils.Interface(_abi) as ScuderiaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Scuderia {
    return new Contract(address, _abi, signerOrProvider) as Scuderia;
  }
}
