/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Scuderia,
  ScuderiaInterface,
} from "../../../contracts/implementations/Scuderia";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "CannotTransferStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPaymentAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "SupplyWillBeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyStaked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenInLockin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockinPeriod",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "getStakeStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "timeStaked",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockinPeriod",
            type: "uint64",
          },
        ],
        internalType: "struct IStakable.StakedToken[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadataSeed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Scoot",
        name: "_address",
        type: "address",
      },
    ],
    name: "setScootContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "enum IStakable.LockinPeriod",
        name: "_lockin",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint64",
        name: "timeStaked",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockinPeriod",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_walletOwner",
        type: "address",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a80546001600160401b03191667016345785d8a0000179055600e805460ff191690553480156200003557600080fd5b50604051620034e1380380620034e1833981016040819052620000589162000287565b60405180604001604052806008815260200167536375646572696160c01b8152506040518060400160405280600381526020016214d0d160ea1b8152508181620000b1620000ab6200015660201b60201c565b6200015a565b6003620000bf83826200035e565b506004620000ce82826200035e565b5050600180555050506001600160a01b038116620001335760405162461bcd60e51b815260206004820152601b60248201527f6f776e657220616464726573732063616e6e6f7420626520307830000000000060448201526064015b60405180910390fd5b6001600160a01b03811633146200014f576200014f81620001aa565b506200042a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001b462000229565b6001600160a01b0381166200021b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200012a565b62000226816200015a565b50565b6000546001600160a01b03163314620002855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200012a565b565b6000602082840312156200029a57600080fd5b81516001600160a01b0381168114620002b257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002e457607f821691505b6020821081036200030557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035957600081815260208120601f850160051c81016020861015620003345750805b601f850160051c820191505b81811015620003555782815560010162000340565b5050505b505050565b81516001600160401b038111156200037a576200037a620002b9565b62000392816200038b8454620002cf565b846200030b565b602080601f831160018114620003ca5760008415620003b15750858301515b600019600386901b1c1916600185901b17855562000355565b600085815260208120601f198616915b82811015620003fb57888601518255948401946001909101908401620003da565b50858210156200041a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6130a7806200043a6000396000f3fe6080604052600436106101c15760003560e01c8063715018a6116100f7578063c87b56dd11610095578063e449f34111610064578063e449f34114610556578063e985e9c514610576578063ea6206fd146105bf578063f2fde38b146105df57600080fd5b8063c87b56dd14610486578063d1ca41a9146104a6578063d5a44f86146104c6578063dab4fe4e1461052957600080fd5b806395d89b41116100d157806395d89b411461041e578063a0712d6814610433578063a22cb46514610446578063b88d4fde1461046657600080fd5b8063715018a6146103d65780637d8966e4146103eb5780638da5cb5b1461040057600080fd5b806323b872dd1161016457806351cff8d91161013e57806351cff8d91461035c5780636352211e1461037c57806368428a1b1461039c57806370a08231146103b657600080fd5b806323b872dd146102fc57806342842e0e1461031c57806342966c681461033c57600080fd5b8063081812fc116101a0578063081812fc14610258578063095ea7b31461029057806318160ddd146102b25780631982640c146102cf57600080fd5b8062ad1e3b146101c657806301ffc9a71461020657806306fdde0314610236575b600080fd5b3480156101d257600080fd5b506101f36101e136600461221b565b600d6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561021257600080fd5b5061022661022136600461224a565b6105ff565b60405190151581526020016101fd565b34801561024257600080fd5b5061024b610651565b6040516101fd91906122b7565b34801561026457600080fd5b5061027861027336600461221b565b6106e3565b6040516001600160a01b0390911681526020016101fd565b34801561029c57600080fd5b506102b06102ab3660046122df565b610727565b005b3480156102be57600080fd5b5060025460015403600019016101f3565b3480156102db57600080fd5b506102ef6102ea36600461230b565b6107f1565b6040516101fd9190612363565b34801561030857600080fd5b506102b0610317366004612376565b6108e8565b34801561032857600080fd5b506102b0610337366004612376565b610975565b34801561034857600080fd5b506102b061035736600461221b565b610990565b34801561036857600080fd5b506102b061037736600461230b565b6109dd565b34801561038857600080fd5b5061027861039736600461221b565b610a1e565b3480156103a857600080fd5b50600e546102269060ff1681565b3480156103c257600080fd5b506101f36103d136600461230b565b610a29565b3480156103e257600080fd5b506102b0610a78565b3480156103f757600080fd5b506102b0610a8c565b34801561040c57600080fd5b506000546001600160a01b0316610278565b34801561042a57600080fd5b5061024b610aa8565b6102b061044136600461221b565b610ab7565b34801561045257600080fd5b506102b06104613660046123b7565b610c33565b34801561047257600080fd5b506102b061048136600461243c565b610cc8565b34801561049257600080fd5b5061024b6104a136600461221b565b610d57565b3480156104b257600080fd5b506102b06104c1366004612580565b610d99565b3480156104d257600080fd5b506105086104e136600461221b565b60096020526000908152604090205467ffffffffffffffff80821691600160401b90041682565b6040805167ffffffffffffffff9384168152929091166020830152016101fd565b34801561053557600080fd5b506105496105443660046125cb565b610f6c565b6040516101fd9190612600565b34801561056257600080fd5b506102b06105713660046125cb565b611071565b34801561058257600080fd5b5061022661059136600461265d565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b3480156105cb57600080fd5b506102b06105da36600461230b565b61125d565b3480156105eb57600080fd5b506102b06105fa36600461230b565b61129a565b60006301ffc9a760e01b6001600160e01b03198316148061063057506380ac58cd60e01b6001600160e01b03198316145b8061064b5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600380546106609061268b565b80601f016020809104026020016040519081016040528092919081815260200182805461068c9061268b565b80156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b5050505050905090565b60006106ee82611310565b61070b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b600061073282610a1e565b9050336001600160a01b03821614610788576001600160a01b038116600090815260086020908152604080832033845290915290205460ff16610788576040516367d9dca160e11b815260040160405180910390fd5b600082815260076020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b606060006107fe83610a29565b9050806000036108225760408051600080825260208201909252905b509392505050565b8067ffffffffffffffff81111561083b5761083b6123f5565b604051908082528060200260200182016040528015610864578160200160208202803683370190505b509150600060015b6001546000190181116108df578183146108df57846001600160a01b031661089382610a1e565b6001600160a01b0316036108cd57808483815181106108b4576108b46126bf565b6020908102919091010152816108c9816126eb565b9250505b806108d7816126eb565b91505061086c565b50505b50919050565b6001600160a01b0383161561096557600e54604051636918579d60e11b81526001600160a01b03858116600483015284811660248301526101009092049091169063d230af3a90604401600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050505b610970838383611345565b505050565b61097083838360405180602001604052806000815250610cc8565b60008181526009602052604090205467ffffffffffffffff16156109cf57604051635034a20760e01b8152600481018290526024015b60405180910390fd5b6109da816001611511565b50565b6109e5611687565b6040516001600160a01b038216904780156108fc02916000818181858888f19350505050158015610a1a573d6000803e3d6000fd5b5050565b600061064b826116e1565b60006001600160a01b038216610a52576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610a80611687565b610a8a6000611757565b565b610a94611687565b600e805460ff19811660ff90911615179055565b6060600480546106609061268b565b600e5460ff16610ada57604051630fe219dd60e21b815260040160405180910390fd5b6002546001546113889183910360001901610af59190612704565b1115610b145760405163b03ef06960e01b815260040160405180910390fd5b801580610b215750600a81115b15610b3f5760405163011674e560e71b815260040160405180910390fd5b600a54610b5790829067ffffffffffffffff16612717565b3414610b7657604051636992e1ff60e01b815260040160405180910390fd5b60015b818111610bc75760025460015460009183910360001901610b9a9190612704565b9050610ba5816117b4565b6000918252600d60205260409091205580610bbf816126eb565b915050610b79565b50600e5460405163632447c960e01b81523360048201526101009091046001600160a01b03169063632447c990602401600060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050506109da3382611812565b336001600160a01b03831603610c5c5760405163b06307db60e01b815260040160405180910390fd5b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03841615610d4557600e54604051636918579d60e11b81526001600160a01b03868116600483015285811660248301526101009092049091169063d230af3a90604401600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b505050505b610d518484848461182c565b50505050565b6060610d6282611310565b610d7f57604051630a14c4b560e41b815260040160405180910390fd5b6000828152600d602052604090205461064b908390611870565b6000610da48261191d565b905060005b8351811015610f2357336001600160a01b0316610dde858381518110610dd157610dd16126bf565b6020026020010151610a1e565b6001600160a01b031614610e05576040516359dc379f60e01b815260040160405180910390fd5b60096000858381518110610e1b57610e1b6126bf565b60209081029190910181015182528101919091526040016000205467ffffffffffffffff1615610e7b57838181518110610e5757610e576126bf565b60200260200101516040516328f0990960e11b81526004016109c691815260200190565b60405180604001604052804267ffffffffffffffff1681526020018367ffffffffffffffff1681525060096000868481518110610eba57610eba6126bf565b60209081029190910181015182528181019290925260400160002082518154939092015167ffffffffffffffff908116600160401b026fffffffffffffffffffffffffffffffff1990941692169190911791909117905580610f1b816126eb565b915050610da9565b50336001600160a01b03167ffb8aecb8b23012599b556fb33ec46f8109af4272df44fda6106fd79601b9cb7e8483604051610f5f929190612736565b60405180910390a2505050565b60606000825167ffffffffffffffff811115610f8a57610f8a6123f5565b604051908082528060200260200182016040528015610fcf57816020015b6040805180820190915260008082526020820152815260200190600190039081610fa85790505b50905060005b835181101561106a5760096000858381518110610ff457610ff46126bf565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b9091041691810191909152825183908390811061104c5761104c6126bf565b60200260200101819052508080611062906126eb565b915050610fd5565b5092915050565b60005b815181101561121857600060096000848481518110611095576110956126bf565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b9091041691810191909152835190915033906110f690859085908110610dd157610dd16126bf565b6001600160a01b03161461111d576040516359dc379f60e01b815260040160405180910390fd5b805167ffffffffffffffff1660000361116657828281518110611142576111426126bf565b602002602001015160405163220d012160e11b81526004016109c691815260200190565b60208101518151429161117891612762565b67ffffffffffffffff1611156111be5782828151811061119a5761119a6126bf565b60200260200101516040516360a612c760e01b81526004016109c691815260200190565b600960008484815181106111d4576111d46126bf565b602090810291909101810151825281019190915260400160002080546fffffffffffffffffffffffffffffffff191690555080611210816126eb565b915050611074565b50336001600160a01b03167f8537ffc096ba30690173694a1630e9cdad3b912b48980d0127edbcfe80076b61826040516112529190612363565b60405180910390a250565b611265611687565b600e80546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6112a2611687565b6001600160a01b0381166113075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c6565b6109da81611757565b600081600111158015611324575060015482105b801561064b575050600090815260056020526040902054600160e01b161590565b6000611350826116e1565b9050836001600160a01b0316816001600160a01b0316146113835760405162a1148160e81b815260040160405180910390fd5b600082815260076020526040902080546113af8187335b6001600160a01b039081169116811491141790565b6113f7576001600160a01b038616600090815260086020908152604080832033845290915290205460ff166113f757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661141e57604051633a954ecd60e21b815260040160405180910390fd5b61142b8686866001611980565b801561143657600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040812091909155600160e11b841690036114c8576001840160008181526005602052604081205490036114c65760015481146114c65760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b600061151c836116e1565b90508060008061153a86600090815260076020526040902080549091565b9150915084156115975761154f81843361139a565b611597576001600160a01b038316600090815260086020908152604080832033845290915290205460ff1661159757604051632ce44b5f60e11b815260040160405180910390fd5b6115a5836000886001611980565b80156115b057600082555b6001600160a01b038316600081815260066020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260056020526040812091909155600160e11b8516900361163e5760018601600081815260056020526040812054900361163c57600154811461163c5760008181526005602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060028054600101905550505050565b6000546001600160a01b03163314610a8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c6565b6000818060011161173e5760015481101561173e5760008181526005602052604081205490600160e01b8216900361173c575b80600003611735575060001901600081815260056020526040902054611714565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000424433846040516020016117f59493929190938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b604051602081830303815290604052805190602001209050919050565b610a1a828260405180602001604052806000815250611a07565b6118378484846108e8565b6001600160a01b0383163b15610d515761185384848484611a6d565b610d51576040516368d2bf6b60e11b815260040160405180910390fd5b6060600061187d83611b59565b90506118f561188b82611c25565b61189486611cd9565b835160208501516118a490611cd9565b6118b18660400151611cd9565b6118be8760600151611cd9565b6118cb8860800151611cd9565b6040516020016118e1979695949392919061279f565b604051602081830303815290604052611dda565b60405160200161190591906129ff565b60405160208183030381529060405291505092915050565b60008082600281111561193257611932612a44565b0361193d575062278d005b600182600281111561195157611951612a44565b0361195c5750624f1a005b600282600281111561197057611970612a44565b0361197b57506276a7005b919050565b6001600160a01b03841615610d515760005b81811015611a0057600960006119a88386612704565b815260208101919091526040016000205467ffffffffffffffff16156119ee576119d28184612704565b604051635034a20760e01b81526004016109c691815260200190565b806119f8816126eb565b915050611992565b5050505050565b611a118383611f2d565b6001600160a01b0383163b15610970576001548281035b611a3b6000868380600101945086611a6d565b611a58576040516368d2bf6b60e11b815260040160405180910390fd5b818110611a28578160015414611a0057600080fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611aa2903390899088908890600401612a5a565b6020604051808303816000875af1925050508015611add575060408051601f3d908101601f19168201909252611ada91810190612a96565b60015b611b3b573d808015611b0b576040519150601f19603f3d011682016040523d82523d6000602084013e611b10565b606091505b508051600003611b33576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b611b8b6040518060a0016040528060608152602001600081526020016000815260200160008152602001600081525090565b6040518060a00160405280611ba1846000612038565b8152602001611bb56046600686901c612ac9565b611bc090601f612704565b8152602001611bd46046600c86901c612ac9565b611bdf90601f612704565b8152602001611bf36046601286901c612ac9565b611bfe90601f612704565b8152602001611c126046601886901c612ac9565b611c1d90601f612704565b905292915050565b6060611cb38260000151604051602001611c3f9190612add565b604051602081830303815290604052611c5b8460200151611cd9565b611c688560400151611cd9565b611c758660600151611cd9565b611c828760800151611cd9565b604051602001611c959493929190612dd6565b60408051601f19818403018152908290526118e19291602001612f96565b604051602001611cc39190612fc5565b6040516020818303038152906040529050919050565b606081600003611d005750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d2a5780611d14816126eb565b9150611d239050600a8361300a565b9150611d04565b60008167ffffffffffffffff811115611d4557611d456123f5565b6040519080825280601f01601f191660200182016040528015611d6f576020820181803683370190505b5090505b8415611b5157611d8460018361301e565b9150611d91600a86612ac9565b611d9c906030612704565b60f81b818381518110611db157611db16126bf565b60200101906001600160f81b031916908160001a905350611dd3600a8661300a565b9450611d73565b60608151600003611df957505060408051602081019091526000815290565b60006040518060600160405280604081526020016130326040913990506000600384516002611e289190612704565b611e32919061300a565b611e3d906004612717565b67ffffffffffffffff811115611e5557611e556123f5565b6040519080825280601f01601f191660200182016040528015611e7f576020820181803683370190505b509050600182016020820185865187015b80821015611eeb576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611e90565b5050600386510660018114611f075760028114611f1a57611f22565b603d6001830353603d6002830353611f22565b603d60018303535b509195945050505050565b6001546000829003611f525760405163b562e8dd60e01b815260040160405180910390fd5b611f5f6000848385611980565b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461200e57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611fd6565b508160000361202f57604051622e076360e81b815260040160405180910390fd5b60015550505050565b6060601e821061208a5760405162461bcd60e51b815260206004820152601360248201527f6f6666657374206f7574206f662072616e67650000000000000000000000000060448201526064016109c6565b60408051600680825281830190925260009160208201818036833701905050905060005b600381101561081a5760408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201526004866120eb8785612704565b602081106120fb576120fb6126bf565b1a60f81b6001600160f81b031916901c60f81c60ff1681518110612121576121216126bf565b01602001516001600160f81b0319168261213c836002612717565b8151811061214c5761214c6126bf565b60200101906001600160f81b031916908160001a90535060408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b6020820152856121958684612704565b602081106121a5576121a56126bf565b825191901a600f169081106121bc576121bc6126bf565b01602001516001600160f81b031916826121d7836002612717565b6121e2906001612704565b815181106121f2576121f26126bf565b60200101906001600160f81b031916908160001a90535080612213816126eb565b9150506120ae565b60006020828403121561222d57600080fd5b5035919050565b6001600160e01b0319811681146109da57600080fd5b60006020828403121561225c57600080fd5b813561173581612234565b60005b8381101561228257818101518382015260200161226a565b50506000910152565b600081518084526122a3816020860160208601612267565b601f01601f19169290920160200192915050565b602081526000611735602083018461228b565b6001600160a01b03811681146109da57600080fd5b600080604083850312156122f257600080fd5b82356122fd816122ca565b946020939093013593505050565b60006020828403121561231d57600080fd5b8135611735816122ca565b600081518084526020808501945080840160005b838110156123585781518752958201959082019060010161233c565b509495945050505050565b6020815260006117356020830184612328565b60008060006060848603121561238b57600080fd5b8335612396816122ca565b925060208401356123a6816122ca565b929592945050506040919091013590565b600080604083850312156123ca57600080fd5b82356123d5816122ca565b9150602083013580151581146123ea57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612434576124346123f5565b604052919050565b6000806000806080858703121561245257600080fd5b843561245d816122ca565b935060208581013561246e816122ca565b935060408601359250606086013567ffffffffffffffff8082111561249257600080fd5b818801915088601f8301126124a657600080fd5b8135818111156124b8576124b86123f5565b6124ca601f8201601f1916850161240b565b915080825289848285010111156124e057600080fd5b808484018584013760008482840101525080935050505092959194509250565b600082601f83011261251157600080fd5b8135602067ffffffffffffffff82111561252d5761252d6123f5565b8160051b61253c82820161240b565b928352848101820192828101908785111561255657600080fd5b83870192505b848310156125755782358252918301919083019061255c565b979650505050505050565b6000806040838503121561259357600080fd5b823567ffffffffffffffff8111156125aa57600080fd5b6125b685828601612500565b9250506020830135600381106123ea57600080fd5b6000602082840312156125dd57600080fd5b813567ffffffffffffffff8111156125f457600080fd5b611b5184828501612500565b602080825282518282018190526000919060409081850190868401855b82811015612650578151805167ffffffffffffffff9081168652908701511686850152928401929085019060010161261d565b5091979650505050505050565b6000806040838503121561267057600080fd5b823561267b816122ca565b915060208301356123ea816122ca565b600181811c9082168061269f57607f821691505b6020821081036108e257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016126fd576126fd6126d5565b5060010190565b8082018082111561064b5761064b6126d5565b6000816000190483118215151615612731576127316126d5565b500290565b6040815260006127496040830185612328565b905067ffffffffffffffff831660208301529392505050565b67ffffffffffffffff81811683821601908082111561106a5761106a6126d5565b60008151612795818560208601612267565b9290920192915050565b7f7b226e616d65223a225363756465726961204e4654222c2022696d616765223a8152601160f91b6020820152600088516127e1816021850160208d01612267565b7f222c2022746f6b656e4964223a22000000000000000000000000000000000000602191840191820152885161281e81602f840160208d01612267565b6b1116101131b7b637b9111d1160a11b602f9290910191820152875161284b81603b840160208c01612267565b6b1116101139b832b2b2111d1160a11b603b92909101918201528651612878816047840160208b01612267565b6129f061292061291a6128f16128eb6128c26128bc6047888a01017f222c2022616363656c65726174696f6e223a2200000000000000000000000000815260130190565b8d612783565b7f222c202268616e646c696e67223a2200000000000000000000000000000000008152600f0190565b8a612783565b7f222c202272656c696162696c697479223a220000000000000000000000000000815260120190565b87612783565b7f222c20226465736372697074696f6e223a20225363756465726961206973206181527f2066756c6c79206f6e2d636861696e20726163696e67204e46542065636f737960208201527f7374656d207468617420616c6c6f7773206d696e74696e672c206d657461646160408201527f746120616e6420696d6167652067656e65726174696f6e2c20726163696e672060608201527f616e642062657474696e672c20616c6c2072756e6e696e67206f6e20506f6c79608082015265676f6e2e227d60d01b60a082015260a60190565b9b9a5050505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251612a3781601d850160208701612267565b91909101601d0192915050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152612a8c608083018461228b565b9695505050505050565b600060208284031215612aa857600080fd5b815161173581612234565b634e487b7160e01b600052601260045260246000fd5b600082612ad857612ad8612ab3565b500690565b7f3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d22555481526523169c111f9f60d11b60208201527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060268201527f30302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e60468201527f77332e6f72672f313939392f786c696e6b222076657273696f6e3d22312e312260668201527f2076696577426f783d223020302034303020343030222070726573657276654160868201527f7370656374526174696f3d22784d6964594d6964206d656574223e000000000060a68201527f3c7374796c6520747970653d22746578742f637373223e3c215b43444154415b60c18201527f74657874207b20666f6e742d66616d696c793a206d6f6e6f73706163653b206660e18201527f6f6e742d73697a653a20323170783b7d202e6831207b666f6e742d73697a653a6101018201527f20343070783b20666f6e742d7765696768743a203630303b7d5d5d3e3c2f7374610121820152633cb6329f60e11b6101418201527f3c726563742077696474683d2234303022206865696768743d223430302220666101458201527f696c6c3d222366666666666622202f3e000000000000000000000000000000006101658201526000611735612d87612d38612d2861291a61017587017f3c726563742077696474683d2234303022206865696768743d2234303022206681527f696c6c2d6f7061636974793d22302e36222066696c6c3d222300000000000000602082015260390190565b631110179f60e11b815260040190565b7f3c7465787420636c6173733d2268312220783d2235302220793d223730223e5381527f63756465726961204e46543c2f746578743e0000000000000000000000000000602082015260320190565b7f3c7465787420783d2237302220793d2232323022207374796c653d22666f6e7481527f2d73697a653a31333070783b223ef09f8f8eefb88ff09f92a83c2f746578743e602082015260400190565b7f3c7465787420783d2232302220793d2232383022207374796c653d22666f6e7481527f2d73697a653a313870783b223ef09f94a52073706565643a2000000000000000602082015260008551612e34816039850160208a01612267565b8083019050661e17ba32bc3a1f60c91b8060398301527f3c7465787420783d2232302220793d2233313022207374796c653d22666f6e7460408301527f2d73697a653a313870783b223ee29aa120616363656c65726174696f6e3a200060608301528651612ea981607f850160208b01612267565b607f9201918201527f3c7465787420783d2232302220793d2233343022207374796c653d22666f6e7460868201527f2d73697a653a313870783b223ee29a99efb88f2068616e646c696e673a20000060a6820152612575612f84612f1761291a612f2a8260c487018b612783565b661e17ba32bc3a1f60c91b815260070190565b7f3c7465787420783d2232302220793d2233373022207374796c653d22666f6e7481527f2d73697a653a313870783b223ef09f9ba0efb88f2072656c696162696c69747960208201526101d160f51b604082015260420190565b651e17b9bb339f60d11b815260060190565b60008351612fa8818460208801612267565b835190830190612fbc818360208801612267565b01949350505050565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815260008251612ffd81601a850160208701612267565b91909101601a0192915050565b60008261301957613019612ab3565b500490565b8181038181111561064b5761064b6126d556fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212200f9ff85065456683c56f95a93712317dd635d062ad7002529e7c0963017d4ccb64736f6c63430008100033";

type ScuderiaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScuderiaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Scuderia__factory extends ContractFactory {
  constructor(...args: ScuderiaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Scuderia> {
    return super.deploy(_ownerAddress, overrides || {}) as Promise<Scuderia>;
  }
  override getDeployTransaction(
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ownerAddress, overrides || {});
  }
  override attach(address: string): Scuderia {
    return super.attach(address) as Scuderia;
  }
  override connect(signer: Signer): Scuderia__factory {
    return super.connect(signer) as Scuderia__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScuderiaInterface {
    return new utils.Interface(_abi) as ScuderiaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Scuderia {
    return new Contract(address, _abi, signerOrProvider) as Scuderia;
  }
}
