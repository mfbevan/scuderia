/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Stakable,
  ERC721StakableInterface,
} from "../../../contracts/implementations/ERC721Stakable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "CannotTransferStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyStaked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenInLockin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockinPeriod",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "enum IStakable.LockinPeriod",
        name: "_lockin",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint64",
        name: "timeStaked",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockinPeriod",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003b2238038062003b2283398181016040528101906200003791906200024c565b818181600290816200004a91906200051c565b5080600390816200005c91906200051c565b506200006d620000b160201b60201c565b6000819055505050620000a97f8913945783d634d307a2adf7ccaf21d85f431cb7d7f3ed81f26f8a6f425c868060001b620000b660201b60201c565b505062000603565b600090565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012282620000d7565b810181811067ffffffffffffffff82111715620001445762000143620000e8565b5b80604052505050565b600062000159620000b9565b905062000167828262000117565b919050565b600067ffffffffffffffff8211156200018a5762000189620000e8565b5b6200019582620000d7565b9050602081019050919050565b60005b83811015620001c2578082015181840152602081019050620001a5565b60008484015250505050565b6000620001e5620001df846200016c565b6200014d565b905082815260208101848484011115620002045762000203620000d2565b5b62000211848285620001a2565b509392505050565b600082601f830112620002315762000230620000cd565b5b815162000243848260208601620001ce565b91505092915050565b60008060408385031215620002665762000265620000c3565b5b600083015167ffffffffffffffff811115620002875762000286620000c8565b5b620002958582860162000219565b925050602083015167ffffffffffffffff811115620002b957620002b8620000c8565b5b620002c78582860162000219565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200032457607f821691505b6020821081036200033a5762000339620002dc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000365565b620003b0868362000365565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003fd620003f7620003f184620003c8565b620003d2565b620003c8565b9050919050565b6000819050919050565b6200041983620003dc565b62000431620004288262000404565b84845462000372565b825550505050565b600090565b6200044862000439565b620004558184846200040e565b505050565b5b818110156200047d57620004716000826200043e565b6001810190506200045b565b5050565b601f821115620004cc57620004968162000340565b620004a18462000355565b81016020851015620004b1578190505b620004c9620004c08562000355565b8301826200045a565b50505b505050565b600082821c905092915050565b6000620004f160001984600802620004d1565b1980831691505092915050565b60006200050c8383620004de565b9150826002028217905092915050565b6200052782620002d1565b67ffffffffffffffff811115620005435762000542620000e8565b5b6200054f82546200030b565b6200055c82828562000481565b600060209050601f8311600181146200059457600084156200057f578287015190505b6200058b8582620004fe565b865550620005fb565b601f198416620005a48662000340565b60005b82811015620005ce57848901518255600182019150602085019450602081019050620005a7565b86831015620005ee5784890151620005ea601f891682620004de565b8355505b6001600288020188555050505b505050505050565b61350f80620006136000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063c87b56dd11610071578063c87b56dd146102dd578063d1ca41a91461030d578063d5a44f8614610329578063e449f3411461035a578063e985e9c51461037657610116565b806370a082311461025757806395d89b4114610287578063a22cb465146102a5578063b88d4fde146102c157610116565b806318160ddd116100e957806318160ddd146101b557806323b872dd146101d357806342842e0e146101ef57806342966c681461020b5780636352211e1461022757610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b6101356004803603810190610130919061297a565b6103a6565b60405161014291906129c2565b60405180910390f35b610153610438565b6040516101609190612a6d565b60405180910390f35b610183600480360381019061017e9190612ac5565b6104ca565b6040516101909190612b33565b60405180910390f35b6101b360048036038101906101ae9190612b7a565b610549565b005b6101bd61068d565b6040516101ca9190612bc9565b60405180910390f35b6101ed60048036038101906101e89190612be4565b6106a4565b005b61020960048036038101906102049190612be4565b6109c6565b005b61022560048036038101906102209190612ac5565b6109e6565b005b610241600480360381019061023c9190612ac5565b610bcd565b60405161024e9190612b33565b60405180910390f35b610271600480360381019061026c9190612c37565b610bdf565b60405161027e9190612bc9565b60405180910390f35b61028f610c97565b60405161029c9190612a6d565b60405180910390f35b6102bf60048036038101906102ba9190612c90565b610d29565b005b6102db60048036038101906102d69190612e05565b610ea0565b005b6102f760048036038101906102f29190612ac5565b610f13565b6040516103049190612a6d565b60405180910390f35b61032760048036038101906103229190612f75565b610fb1565b005b610343600480360381019061033e9190612ac5565b611536565b604051610351929190612ff4565b60405180910390f35b610374600480360381019061036f919061301d565b611582565b005b610390600480360381019061038b9190613066565b611bda565b60405161039d91906129c2565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040157506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104315750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060028054610447906130d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610473906130d5565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b5050505050905090565b60006104d582611c6e565b61050b576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061055482610bcd565b90508073ffffffffffffffffffffffffffffffffffffffff16610575611ccd565b73ffffffffffffffffffffffffffffffffffffffff16146105d8576105a18161059c611ccd565b611bda565b6105d7576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610697611cd5565b6001546000540303905090565b60006106af82611cda565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610716576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061072284611da6565b915091506107388187610733611ccd565b611dcd565b6107845761074d86610748611ccd565b611bda565b610783576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107ea576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f78686866001611e11565b801561080257600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108d0856108ac88888761213b565b7c020000000000000000000000000000000000000000000000000000000017612163565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416036109565760006001850190506000600460008381526020019081526020016000205403610954576000548114610953578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109be868686600161218e565b505050505050565b6109e183838360405180602001604052806000815250610ea0565b505050565b610a127fcb564ffb65feb2ffed0f0bd66d7a6f6a9d0334a33692fa39192ac0f2dde273e360001b612194565b610a3e7f0860711fbb062a007e8ecca254f0ff887ca04c70f50929e0bd8189b76099779060001b612194565b610a6a7f3f9764b16ddfecd356bc545fda9dd69a81d88790090c8c7d356de76f9d736dc360001b612194565b60006008600083815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614610b3b57610ad27f8d340f94bf31b9ef9adb57ac9d07cf612d111b6b60e226da53edce2f8460b8f760001b612194565b610afe7f8ef26c61406dab0e61e88ee23b11c8ccaacf6300bae9bff678aab6cbdf237e9c60001b612194565b806040517f5034a207000000000000000000000000000000000000000000000000000000008152600401610b329190612bc9565b60405180910390fd5b610b677fb1c5bca55addf75f560bfb2641a37a95cf063446c132967f2fc21cc84748e02c60001b612194565b610b937fc2aa54dbc8832c47853bcbc1aaeb4cbe7771e5216d3a5ac63ce799c2fe03f9a260001b612194565b610bbf7fa8e86077aa185b8ba7671841454c820cd3e8a0822fe83b88799d19e96b4cdd6760001b612194565b610bca816001612197565b50565b6000610bd882611cda565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c46576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610ca6906130d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd2906130d5565b8015610d1f5780601f10610cf457610100808354040283529160200191610d1f565b820191906000526020600020905b815481529060010190602001808311610d0257829003601f168201915b5050505050905090565b610d31611ccd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d95576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610da2611ccd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e4f611ccd565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e9491906129c2565b60405180910390a35050565b610eab8484846106a4565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610f0d57610ed6848484846123e9565b610f0c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610f1e82611c6e565b610f54576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f5e612539565b90506000815103610f7e5760405180602001604052806000815250610fa9565b80610f8884612550565b604051602001610f99929190613142565b6040516020818303038152906040525b915050919050565b610fdd7ffa1e0a921ee699b2951fae07006c1796e8c69d41c072dbbf9ba0789a0d119d6760001b612194565b6110097fdbb97402b58058cb77fd8fb6d785137f21adf44d5fdc89acb7aeb92d3e948d5860001b612194565b6110357f103a730d30c2d9586862df579ae434ea8cfc2075ccea42b1b4178dd7d866953960001b612194565b600061104082612597565b905061106e7f2f11287ed43f49a43aef015dac75f836ce6d200907907c5bf4affde62e71251e60001b612194565b61109a7ffa69ef90055c5ac11b58600196e27abd1e9b4af3d9222385f7b6b74aa64558fc60001b612194565b60005b8351811015611488576110d27fa5e5dd3e9aa32321ad4d575729bd8e8aabff4e6ee027a19753f551d6840f7e4560001b612194565b6110fe7fa35b0f923f15b5f28191c58eeee54ec7a0a8094e00b42e3e5ec4c8607ddc930360001b612194565b3373ffffffffffffffffffffffffffffffffffffffff1661113885838151811061112b5761112a613166565b5b6020026020010151610bcd565b73ffffffffffffffffffffffffffffffffffffffff16146111b15761117f7f08386574590f05e56ff193dcc302e589224f1b76d2007f7b67f09bc64aaca8a160001b612194565b6040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111dd7fbc86374b458f972970d0d76f445c849953b3271c4bdb2432ee6abe846f78806b60001b612194565b6112097f74c0b37bd50d7bbeb3163f9b39d51606193ce876ffc1232803563c3170ba8b5160001b612194565b6112357f51de0981683073d36802afea4dbc3b580611cb2df62fb0bf123b4bac8c293beb60001b612194565b60006008600086848151811061124e5761124d613166565b5b6020026020010151815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161461133a576112b77f655894c446104e52209825fad3ad0e59b50fce70f067210bf571e210f92c80a360001b612194565b6112e37fc3d3b428bc1e35f9d1b0dcd7a7d36f7f315033ca511e95f7a501f72006e5aa2e60001b612194565b8381815181106112f6576112f5613166565b5b60200260200101516040517f51e132120000000000000000000000000000000000000000000000000000000081526004016113319190612bc9565b60405180910390fd5b6113667fa4b9328c557e821966b2a42b0d3fa51a5db556914129986e97db3ba826767f1b60001b612194565b6113927f470183e312640ad83d2c3418eb9c62c836710b7c198a852a9988af89039f9b2d60001b612194565b6113be7fa670ba26330a700f8a4352ba8288807681fa267f4161a7d3a0ebb2e3db2c0d8660001b612194565b60405180604001604052804267ffffffffffffffff1681526020018367ffffffffffffffff16815250600860008684815181106113fe576113fd613166565b5b6020026020010151815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508080611480906131c4565b91505061109d565b506114b57fbc0cb3c8958e68fa242d5f7162369ee18141a8f3911a0172d148bf8ab1e3cb8160001b612194565b6114e17f2ce3f5e2d028e673cbc9e00c087b15c3ef7e47740af4c0b343d55c680e203c9660001b612194565b3373ffffffffffffffffffffffffffffffffffffffff167ffb8aecb8b23012599b556fb33ec46f8109af4272df44fda6106fd79601b9cb7e8483604051611529929190613305565b60405180910390a2505050565b60086020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16905082565b6115ae7f21c56a06ddd6d0ac5a168d7e0db3152cad6dba4f4717c5bf5caae138285b98ae60001b612194565b6115da7f38c78cfbc9a79e438fea9ef5d70d7fa9040fe280945dbe8d3e13b64c0270837160001b612194565b6116067f8dc0cd9db8acecf429c370aceeb70b12e22cc5c69721c45e9f064da1d1e0171960001b612194565b60005b8151811015611b305761163e7f803b85882dc49ccfd8196165d4720140d68d1c0853ef8d1dee7a53b705c1c89560001b612194565b61166a7fbb88f38d6d28240aea42de70a2f9836b3cf11ead638f6eccdec6f3cc1ff6f95b60001b612194565b60006008600084848151811061168357611682613166565b5b602002602001015181526020019081526020016000206040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505090506117367f39c19dd5a4a19601b6ed1f4a2cf45e452d86eecf2d79e400d6b0e1fee1483e2860001b612194565b6117627f82f0056b7811a3c55b46c71b71570f40251b138b9f291764484f151904a1195160001b612194565b3373ffffffffffffffffffffffffffffffffffffffff1661179c84848151811061178f5761178e613166565b5b6020026020010151610bcd565b73ffffffffffffffffffffffffffffffffffffffff1614611815576117e37f92c2b4823425f679df24535f887851121db417fd89d289073138cd64d2d5832060001b612194565b6040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118417fa2248df06087de7073ef56392ea9835cd7b4352d188af0ac3317ed08effface860001b612194565b61186d7f4228ac3ccd69806c29c3d3ff62fd470b7348bb5f48c9f50631e8049c77166d6460001b612194565b6118997fdba9e38d716a169f1c0664921fadb2438f138cc466bd6b22db0964ae70535b6160001b612194565b6000816000015167ffffffffffffffff1603611932576118db7fb7a14fc36cdd25405342d6443602ae27a5394947c98dcdf76011d44833b91f7360001b612194565b8282815181106118ee576118ed613166565b5b60200260200101516040517f441a02420000000000000000000000000000000000000000000000000000000081526004016119299190612bc9565b60405180910390fd5b61195e7ff55b642f72e1774813524eef12f8564549c3a16a3d0ec6d62da90aedc22a75ed60001b612194565b61198a7f28c22d15a27b97c315aece6319a3870dd61752f12a53f1935428e548944ea5e860001b612194565b6119b67f3339a7cac0aafc21681db840c7de0ebbac53136093b7b6f322efdb467278ebf660001b612194565b42816020015182600001516119cb9190613335565b67ffffffffffffffff161115611a5e57611a077febf38df34fe1e26903a2cc657da98505bd88ca86936ab97d40668028c5fb735f60001b612194565b828281518110611a1a57611a19613166565b5b60200260200101516040517f60a612c7000000000000000000000000000000000000000000000000000000008152600401611a559190612bc9565b60405180910390fd5b611a8a7ff5b89e77449623cc3dfbb5fbd98dc6591ddcaa89581c7af3dfddfa28255b8cf160001b612194565b611ab67f913fdc478dd09f0d00cec5a6fdb5f4833a0fc165129d236f289a17ec1daaea2460001b612194565b60086000848481518110611acd57611acc613166565b5b60200260200101518152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549067ffffffffffffffff02191690555050508080611b28906131c4565b915050611609565b50611b5d7f5ea2d1145d6a0c7c47a30609cac43faab2807b4ee346fa81f362e1bc7510bfa060001b612194565b611b897f701837e403b1b4d6698d74206056a4f32c8ea54c8086c4a6d0d29e99474ce2f460001b612194565b3373ffffffffffffffffffffffffffffffffffffffff167f8537ffc096ba30690173694a1630e9cdad3b912b48980d0127edbcfe80076b6182604051611bcf9190613371565b60405180910390a250565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081611c79611cd5565b11158015611c88575060005482105b8015611cc6575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080611ce9611cd5565b11611d6f57600054811015611d6e5760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603611d6c575b60008103611d62576004600083600190039350838152602001908152602001600020549050611d38565b8092505050611da1565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b611e3d7f1406aa578079e1f8ab264a99008dd36fcec28b28949f8677a5d35acc3737eacd60001b612194565b611e697feb0d367da72ec4b1f6f3f67a2073ada50740c32dce4b7dd5e8dfeebc43ba4d9560001b612194565b611e957faeb91d491663cd17906b58e66713824278d861f25c04800a4d755edfd8264e4460001b612194565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f2657611ef57fafe9cf1255dc6672e22b70daf012dd794521df78fa64cb81cb7fb2ff043ed07260001b612194565b611f217f29ed24c8d03e1d9b78c2148bcf899dd935431de3b5ce60e434db9b26b016d44260001b612194565b612135565b611f527f1410c8f574206362ac3539f8f5eb29d49999d3b26991382db0212b4c595562e660001b612194565b611f7e7fe79744f136bad402285e434e5e6c2c71f5fce0b19347510becc2bb954d1d5c3760001b612194565b611faa7fb2204487f098ec6b59f6a0c6678c1bee1179a90220687ee4ad930c26c0a482d460001b612194565b60005b8181101561213357611fe17fc1ce9bc1a7bfdbcc26d8d1e883e53272e41167c0d4320de131f006b66e451d8560001b612194565b61200d7fa23b09ab1819c8ee490b81f7577cbdf21c463227d43b106193c7781e0d54ac9b60001b612194565b600060086000838661201f9190613393565b815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146120f4576120807f891401eff1c786a10c4971eeed3ff6b306f30c81de97d16c3f7d68565866188360001b612194565b6120ac7f154e17420df96a854b590ef93e90390eef5c3270fb82489d46ce7133bdeec9a260001b612194565b80836120b89190613393565b6040517f5034a2070000000000000000000000000000000000000000000000000000000081526004016120eb9190612bc9565b60405180910390fd5b6121207fae0ade30ce873deb1869e219cab0263c8224ae9aa273f0c5fb0056781549854460001b612194565b808061212b906131c4565b915050611fad565b505b50505050565b60008060e883901c905060e8612152868684612905565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b50565b60006121a283611cda565b905060008190506000806121b586611da6565b91509150841561221e576121d181846121cc611ccd565b611dcd565b61221d576121e6836121e1611ccd565b611bda565b61221c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b61222c836000886001611e11565b801561223757600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506122df8361229c8560008861213b565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717612163565b600460008881526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008516036123655760006001870190506000600460008381526020019081526020016000205403612363576000548114612362578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46123cf83600088600161218e565b600160008154809291906001019190505550505050505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261240f611ccd565b8786866040518563ffffffff1660e01b8152600401612431949392919061341c565b6020604051808303816000875af192505050801561246d57506040513d601f19601f8201168201806040525081019061246a919061347d565b60015b6124e6573d806000811461249d576040519150601f19603f3d011682016040523d82523d6000602084013e6124a2565b606091505b5060008151036124de576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060806040510190508060405280825b60011561258357600183039250600a81066030018353600a8104905080612561575b508181036020830392508083525050919050565b60006125c57fcab62698d9212abc341d1b417f92fe24a50b7176172c217d9144c1a6158770d360001b612194565b6125f17f534f98ee2165e4c59516155f61c8ea2a873596b654f5df2c2857047693c3e08060001b612194565b61261d7fe8487301dc167ce0afb099c02c0a37f4c8138a140b918ec47b1f655dcbd1f40660001b612194565b60006002811115612631576126306134aa565b5b826002811115612644576126436134aa565b5b036126ac576126757f5211be1b3d13522780786f7e4f432ce452903993713d6a444fc33ae16f106aa160001b612194565b6126a17fbe2aadf782e111d1d2f4a545381549226716c833d669ddda1da3318334282af060001b612194565b62278d0090506126d9565b6126d87faf32cdb0d7d540430b1abcafa8bf0926d2a1e8341aa16cad7d56a1805be1492060001b612194565b5b6127057f54a74303bb216ad615bdd54d0d8446f8831e8c446a5d63dc0095fe1e280e221e60001b612194565b6127317feebc6e3a96879c12e243c43ed8a359a984bbdf02c12714275f1fd492919e177a60001b612194565b60016002811115612745576127446134aa565b5b826002811115612758576127576134aa565b5b036127c0576127897f39d811943e0f7b025a1ccbed3b689bda66ac3f9577baee3cbfb9468b77d6164760001b612194565b6127b57f13db1639c3def97ebb8dac8363fd114ad8be4de1cce8bbb7fa7c055658b13f1460001b612194565b624f1a0090506127ed565b6127ec7fb48407fffec1a0dc3f58310397ef7d0acaee91f232ed81fdd318bee694a6f9cc60001b612194565b5b6128197f31d06e7e357371b44bd502071214af8338aeaad32946db50a9ad69607331332f60001b612194565b6128457f146ab98e8eb6bb3438b8d3069118480284080312e6351cf131f0cf41d12641f760001b612194565b600280811115612858576128576134aa565b5b82600281111561286b5761286a6134aa565b5b036128d35761289c7fa1270eb9291c1ed7aa8efb290aedecff5a76727dcdf8bbc16df5d08d2cb3bf2e60001b612194565b6128c87f0293ccb25e2e90b6fe9e6182d497bff2fbf68bc7f37c010fa6a6d03a78e6efb660001b612194565b6276a7009050612900565b6128ff7fde3fb2af1a6203766e72af12dc6e2846d5785a5490ab8e4f26b153a18080858760001b612194565b5b919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61295781612922565b811461296257600080fd5b50565b6000813590506129748161294e565b92915050565b6000602082840312156129905761298f612918565b5b600061299e84828501612965565b91505092915050565b60008115159050919050565b6129bc816129a7565b82525050565b60006020820190506129d760008301846129b3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a175780820151818401526020810190506129fc565b60008484015250505050565b6000601f19601f8301169050919050565b6000612a3f826129dd565b612a4981856129e8565b9350612a598185602086016129f9565b612a6281612a23565b840191505092915050565b60006020820190508181036000830152612a878184612a34565b905092915050565b6000819050919050565b612aa281612a8f565b8114612aad57600080fd5b50565b600081359050612abf81612a99565b92915050565b600060208284031215612adb57612ada612918565b5b6000612ae984828501612ab0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b1d82612af2565b9050919050565b612b2d81612b12565b82525050565b6000602082019050612b486000830184612b24565b92915050565b612b5781612b12565b8114612b6257600080fd5b50565b600081359050612b7481612b4e565b92915050565b60008060408385031215612b9157612b90612918565b5b6000612b9f85828601612b65565b9250506020612bb085828601612ab0565b9150509250929050565b612bc381612a8f565b82525050565b6000602082019050612bde6000830184612bba565b92915050565b600080600060608486031215612bfd57612bfc612918565b5b6000612c0b86828701612b65565b9350506020612c1c86828701612b65565b9250506040612c2d86828701612ab0565b9150509250925092565b600060208284031215612c4d57612c4c612918565b5b6000612c5b84828501612b65565b91505092915050565b612c6d816129a7565b8114612c7857600080fd5b50565b600081359050612c8a81612c64565b92915050565b60008060408385031215612ca757612ca6612918565b5b6000612cb585828601612b65565b9250506020612cc685828601612c7b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612d1282612a23565b810181811067ffffffffffffffff82111715612d3157612d30612cda565b5b80604052505050565b6000612d4461290e565b9050612d508282612d09565b919050565b600067ffffffffffffffff821115612d7057612d6f612cda565b5b612d7982612a23565b9050602081019050919050565b82818337600083830152505050565b6000612da8612da384612d55565b612d3a565b905082815260208101848484011115612dc457612dc3612cd5565b5b612dcf848285612d86565b509392505050565b600082601f830112612dec57612deb612cd0565b5b8135612dfc848260208601612d95565b91505092915050565b60008060008060808587031215612e1f57612e1e612918565b5b6000612e2d87828801612b65565b9450506020612e3e87828801612b65565b9350506040612e4f87828801612ab0565b925050606085013567ffffffffffffffff811115612e7057612e6f61291d565b5b612e7c87828801612dd7565b91505092959194509250565b600067ffffffffffffffff821115612ea357612ea2612cda565b5b602082029050602081019050919050565b600080fd5b6000612ecc612ec784612e88565b612d3a565b90508083825260208201905060208402830185811115612eef57612eee612eb4565b5b835b81811015612f185780612f048882612ab0565b845260208401935050602081019050612ef1565b5050509392505050565b600082601f830112612f3757612f36612cd0565b5b8135612f47848260208601612eb9565b91505092915050565b60038110612f5d57600080fd5b50565b600081359050612f6f81612f50565b92915050565b60008060408385031215612f8c57612f8b612918565b5b600083013567ffffffffffffffff811115612faa57612fa961291d565b5b612fb685828601612f22565b9250506020612fc785828601612f60565b9150509250929050565b600067ffffffffffffffff82169050919050565b612fee81612fd1565b82525050565b60006040820190506130096000830185612fe5565b6130166020830184612fe5565b9392505050565b60006020828403121561303357613032612918565b5b600082013567ffffffffffffffff8111156130515761305061291d565b5b61305d84828501612f22565b91505092915050565b6000806040838503121561307d5761307c612918565b5b600061308b85828601612b65565b925050602061309c85828601612b65565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806130ed57607f821691505b602082108103613100576130ff6130a6565b5b50919050565b600081905092915050565b600061311c826129dd565b6131268185613106565b93506131368185602086016129f9565b80840191505092915050565b600061314e8285613111565b915061315a8284613111565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131cf82612a8f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361320157613200613195565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61324181612a8f565b82525050565b60006132538383613238565b60208301905092915050565b6000602082019050919050565b60006132778261320c565b6132818185613217565b935061328c83613228565b8060005b838110156132bd5781516132a48882613247565b97506132af8361325f565b925050600181019050613290565b5085935050505092915050565b6000819050919050565b60006132ef6132ea6132e584612fd1565b6132ca565b612a8f565b9050919050565b6132ff816132d4565b82525050565b6000604082019050818103600083015261331f818561326c565b905061332e60208301846132f6565b9392505050565b600061334082612fd1565b915061334b83612fd1565b9250828201905067ffffffffffffffff81111561336b5761336a613195565b5b92915050565b6000602082019050818103600083015261338b818461326c565b905092915050565b600061339e82612a8f565b91506133a983612a8f565b92508282019050808211156133c1576133c0613195565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006133ee826133c7565b6133f881856133d2565b93506134088185602086016129f9565b61341181612a23565b840191505092915050565b60006080820190506134316000830187612b24565b61343e6020830186612b24565b61344b6040830185612bba565b818103606083015261345d81846133e3565b905095945050505050565b6000815190506134778161294e565b92915050565b60006020828403121561349357613492612918565b5b60006134a184828501613468565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122083e186f793f3fbe9f5a1fde72202570d60361e19a4c271036d1a80ca5586f8d364736f6c63430008100033";

type ERC721StakableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721StakableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Stakable__factory extends ContractFactory {
  constructor(...args: ERC721StakableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Stakable> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC721Stakable>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC721Stakable {
    return super.attach(address) as ERC721Stakable;
  }
  override connect(signer: Signer): ERC721Stakable__factory {
    return super.connect(signer) as ERC721Stakable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721StakableInterface {
    return new utils.Interface(_abi) as ERC721StakableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Stakable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Stakable;
  }
}
