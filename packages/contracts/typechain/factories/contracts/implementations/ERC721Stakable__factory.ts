/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Stakable,
  ERC721StakableInterface,
} from "../../../contracts/implementations/ERC721Stakable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "CannotTransferStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyStaked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenInLockin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockinPeriod",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "enum IStakable.LockinPeriod",
        name: "_lockin",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint64",
        name: "timeStaked",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockinPeriod",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200191938038062001919833981016040819052620000349162000128565b8181600262000044838262000221565b50600362000053828262000221565b506000805550620002ed92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008b57600080fd5b81516001600160401b0380821115620000a857620000a862000063565b604051601f8301601f19908116603f01168101908282118183101715620000d357620000d362000063565b81604052838152602092508683858801011115620000f057600080fd5b600091505b83821015620001145785820183015181830184015290820190620000f5565b600093810190920192909252949350505050565b600080604083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b620001628683870162000079565b935060208501519150808211156200017957600080fd5b50620001888582860162000079565b9150509250929050565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021c57600081815260208120601f850160051c81016020861015620001f75750805b601f850160051c820191505b81811015620002185782815560010162000203565b5050505b505050565b81516001600160401b038111156200023d576200023d62000063565b62000255816200024e845462000192565b84620001ce565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000218565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61161c80620002fd6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063c87b56dd11610071578063c87b56dd1461023b578063d1ca41a91461024e578063d5a44f8614610261578063e449f341146102b5578063e985e9c5146102c857600080fd5b806370a08231146101fa57806395d89b411461020d578063a22cb46514610215578063b88d4fde1461022857600080fd5b806318160ddd116100e957806318160ddd1461019857806323b872dd146101ae57806342842e0e146101c157806342966c68146101d45780636352211e146101e757600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004611073565b6102db565b60405190151581526020015b60405180910390f35b61014b61032d565b60405161013a91906110e0565b61016b6101663660046110f3565b6103bf565b6040516001600160a01b03909116815260200161013a565b610196610191366004611123565b610403565b005b600154600054035b60405190815260200161013a565b6101966101bc36600461114d565b6104a3565b6101966101cf36600461114d565b610652565b6101966101e23660046110f3565b610672565b61016b6101f53660046110f3565b6106be565b6101a0610208366004611189565b6106c9565b61014b610717565b6101966102233660046111a4565b610726565b610196610236366004611226565b6107bb565b61014b6102493660046110f3565b610805565b61019661025c366004611364565b610896565b61029561026f3660046110f3565b6008602052600090815260409020546001600160401b0380821691600160401b90041682565b604080516001600160401b0393841681529290911660208301520161013a565b6101966102c33660046113ae565b610a5c565b61012e6102d63660046113e2565b610c3c565b60006301ffc9a760e01b6001600160e01b03198316148061030c57506380ac58cd60e01b6001600160e01b03198316145b806103275750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461033c90611415565b80601f016020809104026020016040519081016040528092919081815260200182805461036890611415565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050505050905090565b60006103ca82610c6a565b6103e7576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061040e826106be565b9050336001600160a01b038216146104475761042a8133610c3c565b610447576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006104ae82610c91565b9050836001600160a01b0316816001600160a01b0316146104e15760405162a1148160e81b815260040160405180910390fd5b6000828152600660205260409020805461050d8187335b6001600160a01b039081169116811491141790565b6105385761051b8633610c3c565b61053857604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661055f57604051633a954ecd60e21b815260040160405180910390fd5b61056c8686866001610cf8565b801561057757600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610609576001840160008181526004602052604081205490036106075760005481146106075760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61066d838383604051806020016040528060008152506107bb565b505050565b6000818152600860205260409020546001600160401b0316156106b057604051635034a20760e01b8152600481018290526024015b60405180910390fd5b6106bb816001610d7e565b50565b600061032782610c91565b60006001600160a01b0382166106f2576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b60606003805461033c90611415565b336001600160a01b0383160361074f5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6107c68484846104a3565b6001600160a01b0383163b156107ff576107e284848484610ed6565b6107ff576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061081082610c6a565b61082d57604051630a14c4b560e41b815260040160405180910390fd5b600061084460408051602081019091526000815290565b90508051600003610864576040518060200160405280600081525061088f565b8061086e84610fc2565b60405160200161087f92919061144f565b6040516020818303038152906040525b9392505050565b60006108a182610ffa565b905060005b8351811015610a1357336001600160a01b03166108db8583815181106108ce576108ce61147e565b60200260200101516106be565b6001600160a01b031614610902576040516359dc379f60e01b815260040160405180910390fd5b600860008583815181106109185761091861147e565b6020908102919091018101518252810191909152604001600020546001600160401b031615610977578381815181106109535761095361147e565b60200260200101516040516328f0990960e11b81526004016106a791815260200190565b6040518060400160405280426001600160401b03168152602001836001600160401b0316815250600860008684815181106109b4576109b461147e565b6020908102919091018101518252818101929092526040016000208251815493909201516001600160401b03908116600160401b026001600160801b031990941692169190911791909117905580610a0b816114aa565b9150506108a6565b50336001600160a01b03167ffb8aecb8b23012599b556fb33ec46f8109af4272df44fda6106fd79601b9cb7e8483604051610a4f9291906114fe565b60405180910390a2505050565b60005b8151811015610bf757600060086000848481518110610a8057610a8061147e565b60209081029190910181015182528181019290925260409081016000208151808301909252546001600160401b038082168352600160401b909104169181019190915283519091503390610ae0908590859081106108ce576108ce61147e565b6001600160a01b031614610b07576040516359dc379f60e01b815260040160405180910390fd5b80516001600160401b0316600003610b4f57828281518110610b2b57610b2b61147e565b602002602001015160405163220d012160e11b81526004016106a791815260200190565b602081015181514291610b6191611529565b6001600160401b03161115610ba657828281518110610b8257610b8261147e565b60200260200101516040516360a612c760e01b81526004016106a791815260200190565b60086000848481518110610bbc57610bbc61147e565b602090810291909101810151825281019190915260400160002080546001600160801b03191690555080610bef816114aa565b915050610a5f565b50336001600160a01b03167f8537ffc096ba30690173694a1630e9cdad3b912b48980d0127edbcfe80076b6182604051610c319190611550565b60405180910390a250565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6000805482108015610327575050600090815260046020526040902054600160e01b161590565b600081600054811015610cdf5760008181526004602052604081205490600160e01b82169003610cdd575b8060000361088f575060001901600081815260046020526040902054610cbc565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b038416156107ff5760005b81811015610d775760086000610d208386611563565b81526020810191909152604001600020546001600160401b031615610d6557610d498184611563565b604051635034a20760e01b81526004016106a791815260200190565b80610d6f816114aa565b915050610d0a565b5050505050565b6000610d8983610c91565b905080600080610da786600090815260066020526040902080549091565b915091508415610de757610dbc8184336104f8565b610de757610dca8333610c3c565b610de757604051632ce44b5f60e11b815260040160405180910390fd5b610df5836000886001610cf8565b8015610e0057600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b85169003610e8e57600186016000818152600460205260408120549003610e8c576000548114610e8c5760008181526004602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050600180548101905550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610f0b903390899088908890600401611576565b6020604051808303816000875af1925050508015610f46575060408051601f3d908101601f19168201909252610f43918101906115b3565b60015b610fa4573d808015610f74576040519150601f19603f3d011682016040523d82523d6000602084013e610f79565b606091505b508051600003610f9c576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b604080516080019081905280825b600183039250600a81066030018353600a900480610fd05750819003601f19909101908152919050565b60008082600281111561100f5761100f6115d0565b0361101a575062278d005b600182600281111561102e5761102e6115d0565b036110395750624f1a005b600282600281111561104d5761104d6115d0565b0361105857506276a7005b919050565b6001600160e01b0319811681146106bb57600080fd5b60006020828403121561108557600080fd5b813561088f8161105d565b60005b838110156110ab578181015183820152602001611093565b50506000910152565b600081518084526110cc816020860160208601611090565b601f01601f19169290920160200192915050565b60208152600061088f60208301846110b4565b60006020828403121561110557600080fd5b5035919050565b80356001600160a01b038116811461105857600080fd5b6000806040838503121561113657600080fd5b61113f8361110c565b946020939093013593505050565b60008060006060848603121561116257600080fd5b61116b8461110c565b92506111796020850161110c565b9150604084013590509250925092565b60006020828403121561119b57600080fd5b61088f8261110c565b600080604083850312156111b757600080fd5b6111c08361110c565b9150602083013580151581146111d557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561121e5761121e6111e0565b604052919050565b6000806000806080858703121561123c57600080fd5b6112458561110c565b9350602061125481870161110c565b93506040860135925060608601356001600160401b038082111561127757600080fd5b818801915088601f83011261128b57600080fd5b81358181111561129d5761129d6111e0565b6112af601f8201601f191685016111f6565b915080825289848285010111156112c557600080fd5b808484018584013760008482840101525080935050505092959194509250565b600082601f8301126112f657600080fd5b813560206001600160401b03821115611311576113116111e0565b8160051b6113208282016111f6565b928352848101820192828101908785111561133a57600080fd5b83870192505b8483101561135957823582529183019190830190611340565b979650505050505050565b6000806040838503121561137757600080fd5b82356001600160401b0381111561138d57600080fd5b611399858286016112e5565b9250506020830135600381106111d557600080fd5b6000602082840312156113c057600080fd5b81356001600160401b038111156113d657600080fd5b610fba848285016112e5565b600080604083850312156113f557600080fd5b6113fe8361110c565b915061140c6020840161110c565b90509250929050565b600181811c9082168061142957607f821691505b60208210810361144957634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611461818460208801611090565b835190830190611475818360208801611090565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114bc576114bc611494565b5060010190565b600081518084526020808501945080840160005b838110156114f3578151875295820195908201906001016114d7565b509495945050505050565b60408152600061151160408301856114c3565b90506001600160401b03831660208301529392505050565b6001600160401b0381811683821601908082111561154957611549611494565b5092915050565b60208152600061088f60208301846114c3565b8082018082111561032757610327611494565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115a9908301846110b4565b9695505050505050565b6000602082840312156115c557600080fd5b815161088f8161105d565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b6a0bcd7599beadcc5ccbcee68e5a058cf15d04d621120363386f7eeba49f5fc64736f6c63430008100033";

type ERC721StakableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721StakableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Stakable__factory extends ContractFactory {
  constructor(...args: ERC721StakableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Stakable> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC721Stakable>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC721Stakable {
    return super.attach(address) as ERC721Stakable;
  }
  override connect(signer: Signer): ERC721Stakable__factory {
    return super.connect(signer) as ERC721Stakable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721StakableInterface {
    return new utils.Interface(_abi) as ERC721StakableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Stakable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Stakable;
  }
}
