/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Stakable,
  ERC721StakableInterface,
} from "../../../contracts/implementations/ERC721Stakable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "CannotTransferStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyStaked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenInLockin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "TokenNotStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockinPeriod",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "getStakeStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "timeStaked",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockinPeriod",
            type: "uint64",
          },
        ],
        internalType: "struct IStakable.StakedToken[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "enum IStakable.LockinPeriod",
        name: "_lockin",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint64",
        name: "timeStaked",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lockinPeriod",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b2238038062001b22833981016040819052620000349162000128565b8181600262000044838262000221565b50600362000053828262000221565b506000805550620002ed92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008b57600080fd5b81516001600160401b0380821115620000a857620000a862000063565b604051601f8301601f19908116603f01168101908282118183101715620000d357620000d362000063565b81604052838152602092508683858801011115620000f057600080fd5b600091505b83821015620001145785820183015181830184015290820190620000f5565b600093810190920192909252949350505050565b600080604083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b620001628683870162000079565b935060208501519150808211156200017957600080fd5b50620001888582860162000079565b9150509250929050565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021c57600081815260208120601f850160051c81016020861015620001f75750805b601f850160051c820191505b81811015620002185782815560010162000203565b5050505b505050565b81516001600160401b038111156200023d576200023d62000063565b62000255816200024e845462000192565b84620001ce565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000218565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61182580620002fd6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063d1ca41a911610071578063d1ca41a914610259578063d5a44f861461026c578063dab4fe4e146102c2578063e449f341146102e2578063e985e9c5146102f557600080fd5b806370a082311461020557806395d89b4114610218578063a22cb46514610220578063b88d4fde14610233578063c87b56dd1461024657600080fd5b806318160ddd116100f457806318160ddd146101a357806323b872dd146101b957806342842e0e146101cc57806342966c68146101df5780636352211e146101f257600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004611220565b610331565b60405190151581526020015b60405180910390f35b610156610383565b604051610145919061128d565b6101766101713660046112a0565b610415565b6040516001600160a01b039091168152602001610145565b6101a161019c3660046112d0565b610459565b005b600154600054035b604051908152602001610145565b6101a16101c73660046112fa565b610523565b6101a16101da3660046112fa565b6106ef565b6101a16101ed3660046112a0565b61070f565b6101766102003660046112a0565b61075c565b6101ab610213366004611336565b610767565b6101566107b6565b6101a161022e366004611351565b6107c5565b6101a16102413660046113d4565b61085a565b6101566102543660046112a0565b6108a4565b6101a1610267366004611514565b610935565b6102a161027a3660046112a0565b60086020526000908152604090205467ffffffffffffffff80821691600160401b90041682565b6040805167ffffffffffffffff938416815292909116602083015201610145565b6102d56102d036600461155f565b610b08565b6040516101459190611594565b6101a16102f036600461155f565b610c0d565b6101396103033660046115f1565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061036257506380ac58cd60e01b6001600160e01b03198316145b8061037d5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461039290611624565b80601f01602080910402602001604051908101604052809291908181526020018280546103be90611624565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b5050505050905090565b600061042082610df9565b61043d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104648261075c565b9050336001600160a01b038216146104ba576001600160a01b038116600090815260076020908152604080832033845290915290205460ff166104ba576040516367d9dca160e11b815260040160405180910390fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061052e82610e20565b9050836001600160a01b0316816001600160a01b0316146105615760405162a1148160e81b815260040160405180910390fd5b6000828152600660205260409020805461058d8187335b6001600160a01b039081169116811491141790565b6105d5576001600160a01b038616600090815260076020908152604080832033845290915290205460ff166105d557604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166105fc57604051633a954ecd60e21b815260040160405180910390fd5b6106098686866001610e87565b801561061457600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036106a6576001840160008181526004602052604081205490036106a45760005481146106a45760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61070a8383836040518060200160405280600081525061085a565b505050565b60008181526008602052604090205467ffffffffffffffff161561074e57604051635034a20760e01b8152600481018290526024015b60405180910390fd5b610759816001610f0e565b50565b600061037d82610e20565b60006001600160a01b038216610790576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461039290611624565b336001600160a01b038316036107ee5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610865848484610523565b6001600160a01b0383163b1561089e5761088184848484611083565b61089e576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606108af82610df9565b6108cc57604051630a14c4b560e41b815260040160405180910390fd5b60006108e360408051602081019091526000815290565b90508051600003610903576040518060200160405280600081525061092e565b8061090d8461116f565b60405160200161091e92919061165e565b6040516020818303038152906040525b9392505050565b6000610940826111a7565b905060005b8351811015610abf57336001600160a01b031661097a85838151811061096d5761096d61168d565b602002602001015161075c565b6001600160a01b0316146109a1576040516359dc379f60e01b815260040160405180910390fd5b600860008583815181106109b7576109b761168d565b60209081029190910181015182528101919091526040016000205467ffffffffffffffff1615610a17578381815181106109f3576109f361168d565b60200260200101516040516328f0990960e11b815260040161074591815260200190565b60405180604001604052804267ffffffffffffffff1681526020018367ffffffffffffffff1681525060086000868481518110610a5657610a5661168d565b60209081029190910181015182528181019290925260400160002082518154939092015167ffffffffffffffff908116600160401b026fffffffffffffffffffffffffffffffff1990941692169190911791909117905580610ab7816116b9565b915050610945565b50336001600160a01b03167ffb8aecb8b23012599b556fb33ec46f8109af4272df44fda6106fd79601b9cb7e8483604051610afb92919061170d565b60405180910390a2505050565b60606000825167ffffffffffffffff811115610b2657610b2661138d565b604051908082528060200260200182016040528015610b6b57816020015b6040805180820190915260008082526020820152815260200190600190039081610b445790505b50905060005b8351811015610c065760086000858381518110610b9057610b9061168d565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b90910416918101919091528251839083908110610be857610be861168d565b60200260200101819052508080610bfe906116b9565b915050610b71565b5092915050565b60005b8151811015610db457600060086000848481518110610c3157610c3161168d565b602090810291909101810151825281810192909252604090810160002081518083019092525467ffffffffffffffff8082168352600160401b909104169181019190915283519091503390610c929085908590811061096d5761096d61168d565b6001600160a01b031614610cb9576040516359dc379f60e01b815260040160405180910390fd5b805167ffffffffffffffff16600003610d0257828281518110610cde57610cde61168d565b602002602001015160405163220d012160e11b815260040161074591815260200190565b602081015181514291610d1491611739565b67ffffffffffffffff161115610d5a57828281518110610d3657610d3661168d565b60200260200101516040516360a612c760e01b815260040161074591815260200190565b60086000848481518110610d7057610d7061168d565b602090810291909101810151825281019190915260400160002080546fffffffffffffffffffffffffffffffff191690555080610dac816116b9565b915050610c10565b50336001600160a01b03167f8537ffc096ba30690173694a1630e9cdad3b912b48980d0127edbcfe80076b6182604051610dee919061175a565b60405180910390a250565b600080548210801561037d575050600090815260046020526040902054600160e01b161590565b600081600054811015610e6e5760008181526004602052604081205490600160e01b82169003610e6c575b8060000361092e575060001901600081815260046020526040902054610e4b565b505b604051636f96cda160e11b815260040160405180910390fd5b6001600160a01b0384161561089e5760005b81811015610f075760086000610eaf838661176d565b815260208101919091526040016000205467ffffffffffffffff1615610ef557610ed9818461176d565b604051635034a20760e01b815260040161074591815260200190565b80610eff816116b9565b915050610e99565b5050505050565b6000610f1983610e20565b905080600080610f3786600090815260066020526040902080549091565b915091508415610f9457610f4c818433610578565b610f94576001600160a01b038316600090815260076020908152604080832033845290915290205460ff16610f9457604051632ce44b5f60e11b815260040160405180910390fd5b610fa2836000886001610e87565b8015610fad57600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b8516900361103b576001860160008181526004602052604081205490036110395760005481146110395760008181526004602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050600180548101905550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906110b8903390899088908890600401611780565b6020604051808303816000875af19250505080156110f3575060408051601f3d908101601f191682019092526110f0918101906117bc565b60015b611151573d808015611121576040519150601f19603f3d011682016040523d82523d6000602084013e611126565b606091505b508051600003611149576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b604080516080019081905280825b600183039250600a81066030018353600a90048061117d5750819003601f19909101908152919050565b6000808260028111156111bc576111bc6117d9565b036111c7575062278d005b60018260028111156111db576111db6117d9565b036111e65750624f1a005b60028260028111156111fa576111fa6117d9565b0361120557506276a7005b919050565b6001600160e01b03198116811461075957600080fd5b60006020828403121561123257600080fd5b813561092e8161120a565b60005b83811015611258578181015183820152602001611240565b50506000910152565b6000815180845261127981602086016020860161123d565b601f01601f19169290920160200192915050565b60208152600061092e6020830184611261565b6000602082840312156112b257600080fd5b5035919050565b80356001600160a01b038116811461120557600080fd5b600080604083850312156112e357600080fd5b6112ec836112b9565b946020939093013593505050565b60008060006060848603121561130f57600080fd5b611318846112b9565b9250611326602085016112b9565b9150604084013590509250925092565b60006020828403121561134857600080fd5b61092e826112b9565b6000806040838503121561136457600080fd5b61136d836112b9565b91506020830135801515811461138257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156113cc576113cc61138d565b604052919050565b600080600080608085870312156113ea57600080fd5b6113f3856112b9565b935060206114028187016112b9565b935060408601359250606086013567ffffffffffffffff8082111561142657600080fd5b818801915088601f83011261143a57600080fd5b81358181111561144c5761144c61138d565b61145e601f8201601f191685016113a3565b9150808252898482850101111561147457600080fd5b808484018584013760008482840101525080935050505092959194509250565b600082601f8301126114a557600080fd5b8135602067ffffffffffffffff8211156114c1576114c161138d565b8160051b6114d08282016113a3565b92835284810182019282810190878511156114ea57600080fd5b83870192505b84831015611509578235825291830191908301906114f0565b979650505050505050565b6000806040838503121561152757600080fd5b823567ffffffffffffffff81111561153e57600080fd5b61154a85828601611494565b92505060208301356003811061138257600080fd5b60006020828403121561157157600080fd5b813567ffffffffffffffff81111561158857600080fd5b61116784828501611494565b602080825282518282018190526000919060409081850190868401855b828110156115e4578151805167ffffffffffffffff908116865290870151168685015292840192908501906001016115b1565b5091979650505050505050565b6000806040838503121561160457600080fd5b61160d836112b9565b915061161b602084016112b9565b90509250929050565b600181811c9082168061163857607f821691505b60208210810361165857634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161167081846020880161123d565b83519083019061168481836020880161123d565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116cb576116cb6116a3565b5060010190565b600081518084526020808501945080840160005b83811015611702578151875295820195908201906001016116e6565b509495945050505050565b60408152600061172060408301856116d2565b905067ffffffffffffffff831660208301529392505050565b67ffffffffffffffff818116838216019080821115610c0657610c066116a3565b60208152600061092e60208301846116d2565b8082018082111561037d5761037d6116a3565b60006001600160a01b038087168352808616602084015250836040830152608060608301526117b26080830184611261565b9695505050505050565b6000602082840312156117ce57600080fd5b815161092e8161120a565b634e487b7160e01b600052602160045260246000fdfea264697066735822122059f175b57e1b39177941d2a959b594f2854193926e9db24d70c8ed9acabbcf9d64736f6c63430008100033";

type ERC721StakableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721StakableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Stakable__factory extends ContractFactory {
  constructor(...args: ERC721StakableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Stakable> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC721Stakable>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC721Stakable {
    return super.attach(address) as ERC721Stakable;
  }
  override connect(signer: Signer): ERC721Stakable__factory {
    return super.connect(signer) as ERC721Stakable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721StakableInterface {
    return new utils.Interface(_abi) as ERC721StakableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Stakable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Stakable;
  }
}
