/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScuderiaMetadata,
  ScuderiaMetadataInterface,
} from "../../../contracts/libraries/ScuderiaMetadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "getSlice",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6104a661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80637f60b20a146100455780639201de551461006e575b600080fd5b6100586100533660046102b5565b610081565b6040516100659190610379565b60405180910390f35b61005861007c3660046103c7565b610168565b6060600061008f85856103f6565b61009a90600161040f565b67ffffffffffffffff8111156100b2576100b261029f565b6040519080825280601f01601f1916602001820160405280156100dc576020820181803683370190505b50905060005b6100ec86866103f6565b811161015f578360016100ff888461040f565b61010991906103f6565b8151811061011957610119610422565b602001015160f81c60f81b82828151811061013657610136610422565b60200101906001600160f81b031916908160001a9053508061015781610438565b9150506100e2565b50949350505050565b606060005b60208160ff161080156101a15750828160ff166020811061019057610190610422565b1a60f81b6001600160f81b03191615155b156101b857806101b081610451565b91505061016d565b60008160ff1667ffffffffffffffff8111156101d6576101d661029f565b6040519080825280601f01601f191660200182016040528015610200576020820181803683370190505b509050600091505b60208260ff1610801561023c5750838260ff166020811061022b5761022b610422565b1a60f81b6001600160f81b03191615155b1561029857838260ff166020811061025657610256610422565b1a60f81b818360ff168151811061026f5761026f610422565b60200101906001600160f81b031916908160001a9053508161029081610451565b925050610208565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102ca57600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156102f057600080fd5b818601915086601f83011261030457600080fd5b8135818111156103165761031661029f565b604051601f8201601f19908116603f0116810190838211818310171561033e5761033e61029f565b8160405282815289602084870101111561035757600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208083528351808285015260005b818110156103a65785810183015185820160400152820161038a565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103d957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610409576104096103e0565b92915050565b80820180821115610409576104096103e0565b634e487b7160e01b600052603260045260246000fd5b60006001820161044a5761044a6103e0565b5060010190565b600060ff821660ff8103610467576104676103e0565b6001019291505056fea2646970667358221220d3e16bbd7aad4f0b0e63575ff0b085ac4c542f45f7be560c9d1cbb29092a170364736f6c63430008100033";

type ScuderiaMetadataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScuderiaMetadataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScuderiaMetadata__factory extends ContractFactory {
  constructor(...args: ScuderiaMetadataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScuderiaMetadata> {
    return super.deploy(overrides || {}) as Promise<ScuderiaMetadata>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScuderiaMetadata {
    return super.attach(address) as ScuderiaMetadata;
  }
  override connect(signer: Signer): ScuderiaMetadata__factory {
    return super.connect(signer) as ScuderiaMetadata__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScuderiaMetadataInterface {
    return new utils.Interface(_abi) as ScuderiaMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScuderiaMetadata {
    return new Contract(address, _abi, signerOrProvider) as ScuderiaMetadata;
  }
}
